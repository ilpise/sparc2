var geodash={init:{},directives:{},controllers:{},filters:{},vecmath:{},tilemath:{},api:{},listeners:{},ui:{}};geodash.init.templates=function(e){void 0!=geodash.templates&&(geodash.meta.templates=[],$.each(geodash.templates,function(a,t){geodash.meta.templates.push(a),e.run(function(e){e.put(a,t)})}))},geodash.init.filters=function(e){void 0!=geodash.filters&&(geodash.meta.filters=[],$.each(geodash.filters,function(a,t){geodash.meta.filters.push(a),e.filter(a,t)}))},geodash.init.directives=function(e){void 0!=geodash.directives&&(geodash.meta.directives=[],$.each(geodash.directives,function(a,t){geodash.meta.directives.push(a),e.directive(a,t)}))},geodash.init.listeners=function(){$("body").on("click",".btn-clear",function(e){var a=$(e.currentTarget).attr("data-clear");try{$(a).typeahead("close")}catch(t){}$(a).each(function(){var e=$(this);if(e.val(null),void 0!=e.data("backend")){var a=$("#"+e.data("backend"));a.val(null),a.trigger("input"),a.change()}})}),$("body").on("click",".geodash-intent",function(e){e.preventDefault();var a=$(this),t=geodash.api.getScope(a.attr("data-intent-ctrl"));if(a.hasClass("geodash-toggle")){var n=JSON.parse(a.attr("data-intent-data"));a.hasClass("geodash-off")?(a.removeClass("geodash-off"),geodash.api.intend(a.attr("data-intent-names")[0],n,t)):(a.addClass("geodash-off"),geodash.api.intend(a.attr("data-intent-names")[1],n,t))}else if(a.hasClass("geodash-radio")){var r=a.parents(".geodash-radio-group:first").find(".geodash-radio").not(a);if(!a.hasClass("geodash-on")){a.addClass("geodash-on"),a.data("intent-class-on")&&(a.addClass(a.data("intent-class-on")),r.removeClass(a.data("intent-class-on"))),r.removeClass("geodash-on"),a.data("intent-class-off")&&(a.removeClass(a.data("intent-class-off")),r.addClass(a.data("intent-class-off")));var n=JSON.parse(a.attr("data-intent-data"));geodash.api.intend(a.attr("data-intent-name"),n,t)}}else{var n=JSON.parse(a.attr("data-intent-data"));geodash.api.intend(a.attr("data-intent-name"),n,t)}})},geodash.init.typeahead=function(e){$(".typeahead",e).each(function(){var e=$(this),a=(e.data("placeholder"),e.data("initialData")),t=(e.data("width"),e.data("height"),e.data("template-empty")),n=(e.data("template-suggestion"),[]);if(angular.isString(a))if("layers"==a){n=[];var r=angular.element("#geodash-main").scope().map_config.featurelayers;void 0!=r&&(n=n.concat($.map(r,function(e,a){return{id:e.id,text:e.id}})));var o=angular.element("#geodash-main").scope().map_config.baselayers;void 0!=o&&(n=n.concat($.map(o,function(e,a){return{id:e.id,text:e.id}})))}else if("featurelayers"==a){n=[];var r=angular.element("#geodash-main").scope().map_config.featurelayers;n=$.map(r,function(e,a){return{id:a,text:a}})}else n=geodash.initial_data.data[a];else Array.isArray(a)&&(n=$.map(a,function(e,a){return{id:e,text:e}}));if(angular.isDefined(n)&&n.length>0){n.sort(function(e,a){var t=e.text.toLowerCase(),n=a.text.toLowerCase();return n>t?-1:t>n?1:0});var i=new Bloodhound({identify:function(e){return e.text},datumTokenizer:function(e){return Bloodhound.tokenizers.whitespace(e.text)},queryTokenizer:Bloodhound.tokenizers.whitespace,local:n});e.data("engine",i),e.typeahead("destroy","NoCached"),e.typeahead(null,{name:e.attr("name"),minLength:0,limit:10,hint:!1,highlight:!0,displayKey:"text",source:function(e,a){i.ttAdapter()(e,a)},templates:{empty:t,suggestion:function(e){return"<p><strong>"+e.text+"</strong> - "+e.id+"</p>"},footer:function(e){return"<div>Searched for <strong>"+e.query+"</strong></div>"}}}).on("blur",function(e){var a=i.get($(this).val());$("#"+$(this).data("backend")).val(1==a.length?a[0].id:null).trigger("input").change()}).on("typeahead:change",function(e,a){console.log("Event: ",e,a);var t=i.get(a);$("#"+$(this).data("backend")).val(1==t.length?t[0].id:null).trigger("input").change()}).on("typeahead:select typeahead:autocomplete typeahead:cursorchange",function(e,a){console.log("Event: ",e,a);$("#"+$(this).data("backend")).val(extract("id",a,null)).trigger("input").change()})}})},geodash.api.getOption=function(e,a){return void 0!=e&&null!=e?e[a]:void 0},geodash.api.getScope=function(e){return angular.element("#"+e).isolateScope()||angular.element("#"+e).scope()},geodash.api.getDashboardConfig=function(e){var a=geodash.api.getOption(e,"$scope")||geodash.api.getOption(e,"scope")||geodash.api.getScope("geodash-main");return a.map_config},geodash.api.hasLayer=function(e,a){var t=$.grep(a,function(a,t){return a.id==e});return 1==t.length},geodash.api.getLayer=function(e,a){var t=void 0,n=$.grep(a,function(a,t){return a.id==e});return 1==n.length&&(t=n[0]),t},geodash.api.getBaseLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.getLayer(e,t.baselayers)},geodash.api.hasBaseLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.hasLayer(e,t.baselayers)},geodash.api.getFeatureLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.getLayer(e,t.featurelayers)},geodash.api.hasFeatureLayer=function(e,a){var t=geodash.api.getDashboardConfig(a);return geodash.api.hasLayer(e,t.featurelayers)},geodash.api.welcome=function(e){e=e||{};var a=e.$scope||e.scope||angular.element("#geodash-main").scope(),t={id:"geodash-modal-welcome",dynamic:{},"static":{welcome:a.map_config.welcome}};geodash.api.intend("toggleModal",t,a)},geodash.api.intend=function(e,a,t){t.$emit(e,a)},geodash.assert_float=function(e,a){return void 0===e||""===e?a:angular.isNumber(e)?e:parseFloat(e)},geodash.assert_array_length=function(e,a,t){return void 0===e||""===e?t:angular.isString(e)?(e=e.split(","),e.length==a?e:t):angular.isArray(e)?e.length==a?e:t:void 0},geodash.api.opt=function(e,a,t,n){if(void 0!=e){if($.isArray(a)){for(var r=void 0,o=0;o<a.length&&(r=e[a[o]],void 0==r);o++);return r||t||n}return e[a]||t||n}return t||n},geodash.api.opt_i=function(e,a,t){return geodash.api.opt(e,a,t,0)},geodash.api.opt_s=function(e,a,t){return geodash.api.opt(e,a,t,"")},geodash.api.opt_b=function(e,a,t){return geodash.api.opt(e,a,t,!1)},geodash.api.opt_j=function(e,a,t){return geodash.api.opt(e,a,t,{})},geodash.api.normalize_feature=function(e){var e={attributes:e.attributes||e.properties,geometry:e.geometry};return e},geodash.api.flatten=function(e,a){var t={};return $.each(e,function(e,n){var r=void 0!=a?a+"__"+e:e;void 0===n||null===n||angular.isString(n)||angular.isNumber(n)||"boolean"==typeof n?t[r]=n:angular.isArray(n)?$.each(geodash.api.flatten(n,r),function(e,a){t[""+e]=a}):$.each(geodash.api.flatten(n,r),function(e,a){t[e]=a})}),t},geodash.api.unpack=function(e){var a={};return $.each(e,function(t,n){if(-1==t.indexOf("__"))a[t]=n;else{for(var r=t.split("__"),o=e,i=0;i<r.length;i++){var l=r[i];l in o||(o[l]={}),o=o[l]}o[r[r.length-1]]=n}}),a},geodash.api.buildScope=function(e,a){var t=geodash.api.getScope("geodash-main"),n=(a.id_target||a.id_show||a.id,e.targetScope,{state:t.state,meta:geodash.meta});return angular.isDefined(a)&&("static"in a&&(n=$.extend(n,a["static"])),"dynamic"in a&&$.each(a.dynamic,function(a,r){if(angular.isString(r))"map_config"==r?n[a]=t.map_config:"state"==r&&(n[a]=t.state);else if(angular.isArray(r)){var o=r[0].toLowerCase();"source"==o?n[a]=extract(expand(r.slice(1)),e.targetScope):"baselayer"==o||"bl"==o?n[a]=geodash.api.getBaseLayer(r[1])||void 0:"featurelayer"==o||"fl"==o?n[a]=geodash.api.getFeatureLayer(r[1])||void 0:"map_config"==o?n[a]=extract(expand(r.slice(1)),t.map_config):"state"==o&&(n[a]=extract(expand(r.slice(1)),t.state))}else n[a]=r})),$.extend(!0,{},n)},geodash.api.updateValue=function(e,a,t){if(-1==e.indexOf("__"))t[e]=a[e];else{for(var n=e.split("__"),r=0;r<n.length-1;r++){var o=n[r];if(!(o in t)){var i=-1;try{i=parseInt(n[r+1],10)}catch(l){i=-1}t[o]=i>=0?[]:{}}t=t[o]}var s=n[n.length-1];if(angular.isArray(t)){if(s>=t.length){for(var d=s-t.length,c=0;d>c;c++)t.push({});t.push(a[e])}}else t[s]=a[e]}},geodash.listeners.saveAndHide=function(e,a){geodash.listeners.hideModal(e,a);var t=a.id_target||a.id,n=geodash.api.getScope(t),r=geodash.api.buildScope(e,a);n.$apply(function(){$.each(r,function(e,a){n[e]=a})})},geodash.listeners.switchModal=function(e,a){geodash.listeners.hideModal(e,a),geodash.listeners.showModal(e,a)},geodash.listeners.hideModal=function(e,a){var t=a.id_hide||a.id;try{$("#"+t).modal("hide");var n=geodash.api.getScope(t),r=a.clear;"clear"in a&&void 0!=a.clear&&n.$apply(function(){$.each(r,function(e,a){n[a]=void 0})})}catch(o){}},geodash.listeners.toggleModal=function(e,a){geodash.listeners.showModal(e,a)},geodash.listeners.showModal=function(e,a){console.log("event",e),console.log("args",a);var t=a.id_show||a.id,n=geodash.api.getScope(t),r=geodash.api.buildScope(e,a),o=a.modal||{};o.show=!1,n.$apply(function(){$.each(r,function(e,a){n[e]=a}),setTimeout(function(){var e=$("#"+t),a=n.tab;void 0!=a?(e.find(".nav-tabs li").each(function(){var e=$(this),t=e.find("a").attr("href").substring(1);a==t?e.addClass("active"):e.removeClass("active")}),e.find(".tab-pane").each(function(){var e=$(this);a==e.attr("id")?e.addClass("in active"):e.removeClass("in active")})):(e.find(".nav-tabs li").slice(0,1).addClass("active"),e.find(".nav-tabs li").slice(1).removeClass("active"),e.find(".tab-pane").slice(0,1).addClass("in active"),e.find(".tab-pane").slice(1).removeClass("in active")),$('[data-toggle="tooltip"]',e).tooltip(),geodash.init.typeahead(e),$("#"+t).modal(o),$("#"+t).modal("toggle")},0)})},geodash.ui.showOptions=function(e,a){try{var t=$(a);t.typeahead("open"),t.data("ttTypeahead").menu.update.apply(t.data("ttTypeahead").menu,[""]);var n=t.data("engine");n.search.apply(n,[""])}catch(r){}};var currentControllers=[];geodash.init_controller_base=function(e){e.controller("GeoDashControllerBase",geodash.controllers.controller_base)},geodash.init_controller=function(e,a,t){var n=e.data("controllerName")||e.attr("name")||e.attr("id");void 0==n||null==n||""==n?(console.log("Error: Could not load controller for element, because name could not be resolved"),console.log(e,t)):(currentControllers.push({controllerName:n,controller:t||geodash.controllers.controller_base}),a.controller(n,t||geodash.controllers.controller_base))},geodash.init_controllers=function(e,a,t){for(var n=0;n<t.length;n++){var r=t[n];$(r.selector,e).each(function(){try{geodash.init_controller($(this),a,r.controller)}catch(e){console.log('Could not load Geosite Controller "'+r.selector+'"',e)}})}},geodash.vecmath={},geodash.vecmath.distance=function(e,a){var t=L.Projection.SphericalMercator;if(void 0!=a.toString&&a.toString().startsWith("LatLng"))return t.project(e).distanceTo(t.project(a));var n=void 0;return $.each(a._layers,function(a,r){var o=r._latlngs,i=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(o[i]),t.project(o[i+1])),i++);i<o.length-1;i++){var l=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(o[i]),t.project(o[i+1]));n>l&&(n=l)}}),n},geodash.vecmath.closestLocation=function(e,a){if(void 0!=a.toString&&a.toString().startsWith("LatLng"))return a;var t=L.Projection.SphericalMercator,n=void 0,r=void 0;return $.each(a._layers,function(a,o){var i=o._latlngs,l=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(i[l]),t.project(i[l+1])),r=L.LineUtil.closestPointOnSegment(t.project(e),t.project(i[l]),t.project(i[l+1])),l++);l<i.length-1;l++){var s=L.LineUtil.pointToSegmentDistance(t.project(e),t.project(i[l]),t.project(i[l+1]));n>s&&(n=s,r=L.LineUtil.closestPointOnSegment(t.project(e),t.project(i[l]),t.project(i[l+1])))}}),t.unproject(r)},geodash.vecmath.getClosestFeatureAndLocation=function(e,a){var t=void 0,n=0,r=void 0;if(void 0!=e&&e.length>0){t=e[0],n=geodash.vecmath.distance(a,e[0].geometry),r=geodash.vecmath.closestLocation(a,e[0].geometry);for(var o=1;o<e.length;o++){var i=e[o];geodash.vecmath.distance(a,i.geometry)<n&&(t=i,n=geodash.vecmath.distance(a,i.geometry),r=geodash.vecmath.closestLocation(a,i.geometry))}}return{feature:t,location:r}},geodash.init_state=function(e,a){var t=$.extend({},e),n=getHashValueAsFloat(["latitude","lat","y"])||e.lat||0,r=getHashValueAsFloat(["longitude","lon","long","lng","x"])||e.lon||0,o=getHashValueAsInteger(["zoom","z"])||e.z||3,i={lat:n,lon:r,z:o};return t.view=void 0!=t.view?$.extend(t.view,i):i,void 0!=t.filters&&$.each(t.filters,function(e,n){$.each(n,function(n,r){var o=a.filters[e][n].toLowerCase(),i=getHashValue(e+":"+n,o);void 0!=i&&""!=i&&(t.filters[e][n]=i)})}),void 0!=t.styles,t},geodash.ui_init_slider_label=function(e,a,t,n,r){if("ordinal"==t){var o={value:r};a.data("label").html(e(a.data("label-template"))(o))}else if("continuous"==t)if("boolean"==$.type(n)&&n||"true"==n.toLowerCase()){var o={values:[r[0],r[1]]};a.data("label").html(e(a.data("label-template"))(o))}else if("min"==n||"max"==n){var o={value:r};a.data("label").html(e(a.data("label-template"))(o))}},geodash.ui_init_slider_slider=function(e,a,t,n,r,o,i,l,s){"ordinal"==n?t.slider({range:"boolean"==$.type(r)&&r||"true"==r.toLowerCase()?!0:r,value:o,min:0,max:l,step:1,slide:function(n,r){geodash.ui_update_slider_label.apply(this,[e,n,r]);var o=t.data("output"),i=t.data("options")[r.value],l={};l[o]=i,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:l},a)}}):"continuous"==n&&("boolean"==$.type(r)&&r||"true"==r.toLowerCase()?t.slider({range:!0,values:o,min:i,max:l,step:s,slide:function(n,r){geodash.ui_update_slider_label.apply(this,[e,n,r]);var o=t.data("output"),i=r.values,l={};l[o]=i,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:l},a)}}):("min"==r||"max"==r)&&t.slider({range:r,value:o,min:i,max:l,step:s,slide:function(n,r){geodash.ui_update_slider_label.apply(this,[e,n,r]);var o=t.data("output"),i=r.value/100,l={};l[o]=i,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:l},a)}}))},geodash.ui_update_slider_label=function(e,a,t){var n=$(this),r=n.data("type"),o=n.data("range");if("ordinal"==r){var i={value:n.data("options")[t.value]};n.data("label").html(e(n.data("label-template"))(i))}else if("continuous"==r)if("boolean"==$.type(o)&&o||"true"==o.toLowerCase()){var i={values:[t.values[0],t.values[1]]};n.data("label").html(e(n.data("label-template"))(i))}else if("min"==o||"max"==o){var i={value:t.value/100};n.data("label").html(e(n.data("label-template"))(i))}};var getHashValue=function(e,a){var t=void 0;e="string"==typeof e?[e.toLowerCase()]:$.map(e,function(e,a){return e.toLowerCase()});for(var n=location.hash.toLowerCase(),r=0;r<e.length;r++){var o=e[r],i=n.match(new RegExp(o+"=([^&]*)"));if(i&&(t=i[1],void 0!=t&&null!=t&&""!=t))break}if(void 0!=a)if("integer"==a)t=void 0!=t&&null!=t&&""!=t?parseInt(t,10):void 0;else if("stringarray"==a){if(void 0!=t){var l=t.split(",");t=l}}else if("integerarray"==a){if(void 0!=t){for(var s=t.split(","),l=[],r=0;r<s.length;r++){var d=s[r];l.push(void 0!=d&&null!=d&&""!=d?parseInt(d,10):void 0)}t=l}}else if("float"==a)t=void 0!=t&&null!=t&&""!=t?parseFloat(t):void 0;else if("floatarray"==a&&void 0!=t){for(var s=t.split(","),l=[],r=0;r<s.length;r++){var d=s[r];l.push(void 0!=d&&null!=d&&""!=d?parseFloat(d):void 0)}t=l}return t},hasHashValue=function(e){var a=getHashValue(e);return void 0!=a&&null!=a&&""!=a},getHashValueAsStringArray=function(e){return getHashValue(e,"stringarray")},getHashValueAsInteger=function(e){return getHashValue(e,"integer")},getHashValueAsIntegerArray=function(e){return getHashValue(e,"integerarray")},getHashValueAsFloat=function(e){return getHashValue(e,"float")},sortLayers=function(e,a){var t=$.isArray(e)?e:$.map(e,function(e){return e});return t=t.sort(function(e,a){return e.options.renderOrder-a.options.renderOrder}),a===!0&&t.reverse(),t},updateRenderOrder=function(e){for(var a=0;a<e.length;a++)e[a].bringToFront()},layersAsArray=function(e){return $.map(e,function(e,a){return{id:a,layer:e}})},expand=function(e){var a=[];if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];angular.isString(n)&&-1!=n.indexOf(".")?a=a.concat(n.split(".")):a.push(n)}else angular.isString(e)&&(a=e.split("."));return a},extract=function(e,a,t){angular.isString(e)&&(e=e.split("."));var n=void 0;if(0==e.length)n=void 0!=a&&null!=a?a:t;else{var r=e.slice(1);0==r.length&&angular.isString(e[0])&&"length"==e[0].toLowerCase()&&(n=Array.isArray(a)?a.length:angular.isDefined(a)?a.length:0),void 0==n&&angular.isDefined(a)&&(n=Array.isArray(a)?extract(r,a[e[0]],t):extract(r,a[""+e[0]],t))}return n};geodash.codec={},geodash.codec.parseFeatures=function(e,a){var t=[];return $(e).find("gml\\:featuremember").each(function(){var e=$(this).children(),n=e.prop("tagName").toLowerCase(),r=geodash.codec.parseAttributes(e,a[n]),o=e.find("geonode\\:shape"),i=void 0;if(o.find("gml\\:point").length>0){var l=o.find("gml\\:point").find("gml\\:coordinates").text().split(",");i=new L.LatLng(parseFloat(l[1]),parseFloat(l[0]))}else if(o.find("gml\\:multilinestring").length>0){var l=o.find("gml\\:multilinestring").find("gml\\:linestringmember").find("gml\\:linestring").find("gml\\:coordinates").text().split(" ");l=$.map(l,function(e,a){var t=e.split(",");return[[parseFloat(t[0]),parseFloat(t[1])]]});var s=[{type:"LineString",coordinates:l}];i=new L.GeoJSON(s,{})}var d={featuretype:n,attributes:r,geometry:i};t.push(d)}),t},geodash.codec.parseAttributes=function(e,a){for(var t={},n=0;n<a.length;n++){var r=a[n],o=r.output||r.attribute;t[o]=void 0;var i=r.attribute||r.input,l=void 0!=i?[i]:r.inputs;if(void 0!=l)for(var s=0;s<l.length;s++){var i=l[s];if(e.find("geonode\\:"+i).length>0){t[o]=e.find("geonode\\:"+i).text();break}}}return t},geodash.popup={},geodash.popup.buildChart=function(e,a,t,n){var r="";return r+='<div style="text-align:center;"><b>'+e.label+"</b></div><br>",r+='<div id="'+e.id+'" class="geodash-popup-chart"></div>'},geodash.popup.buildField=function(e,a,t,n){var r=e.output||e.attribute,o=void 0,i=!1;if(void 0!=e.when&&"defined"==e.when.toLowerCase()?void 0!=t.attributes[r]&&(i=!0):i=!0,i)if("link"==e.type){var l=void 0!=e.value?e.value:"{{ feature.attributes."+r+" }}";o="<span><b>"+e.label+':</b> <a target="_blank" href="'+e.url+'">',o+=l,o+="</a></span>"}else{var l=void 0;if(void 0!=e.value)l=e.value;else{if("date"==e.type){var s=e.format||"medium";l="feature.attributes."+r+" | date:'"+s+"'"}else l="feature.attributes."+r;e.fallback&&(l="("+l+") || '"+e.fallback+"'"),l="{{ "+l+" }}"}o="<span><b>"+e.label+":</b> "+l+"</span>"}return o},geodash.popup.buildPopupTemplate=function(e,a,t,n){var r=e.panes,o="";angular.isDefined(e.title)&&(o+='<h5 style="word-wrap:break-word;text-align:center;">'+e.title+"</h5>");for(var i=[],l=0;l<r.length;l++){var s=r[l],d=[],c=[];if("fields"in s)for(var p=0;p<s.fields.length;p++){var g=geodash.popup.buildField(s.fields[p],a,t,n);void 0!=g&&d.push(g)}if("charts"in s)for(var p=0;p<s.charts.length;p++){var u=geodash.popup.buildChart(s.charts[p],a,t,n);void 0!=u&&c.push(u)}var h=d.join("<br>");c.length>0&&(h+="<hr>"+c.join("<br>")),i.push(h)}if(r.length>1){var f=[],s=r[0],m='<li class="active"><a data-toggle="tab" href="#'+s.id+'">'+s.tab.label+"</a></li>";f.push(m);for(var l=1;l<r.length;l++)s=r[l],m='<li><a data-toggle="tab" href="#'+s.id+'">'+s.tab.label+"</a></li>",f.push(m);var y='<ul class="nav nav-tabs nav-justified">'+f.join("")+"</ul>",v=[],b='<div id="'+r[0].id+'" class="tab-pane fade in active">'+i[0]+"</div>";v.push(b);for(var l=1;l<r.length;l++)b='<div id="'+r[l].id+'" class="tab-pane fade">'+i[l]+"</div>",v.push(b);o+=y+'<div class="tab-content">'+v.join("")+"</div>"}else o+=i[0];return o},geodash.popup.buildPopupContent=function(e,a,t,n){var r=geodash.popup.buildPopupTemplate(a.popup,a,t,n),o={layer:a,feature:t,state:n};return e(r)(o)},geodash.popup.openPopup=function(e,a,t,n,r,o){var i=geodash.popup.buildPopupContent(e,a,t,o),l=new L.Popup({maxWidth:a.popup.maxWidth||400},void 0);l.setLatLng(new L.LatLng(n.lat,n.lon)),l.setContent(i),r.openPopup(l)},geodash.tilemath={D2R:Math.PI/180,R2D:180/Math.PI},geodash.tilemath.point_to_bbox=function(e,a,t,n){var r=geodash.tilemath.point_to_radius(t),o=e+r;void 0!=n&&n>=0&&(o=o.toFixed(n));var i=e-r;void 0!=n&&n>=0&&(i=i.toFixed(n));var l=a-r;void 0!=n&&n>=0&&(l=l.toFixed(n));var s=a+r;return void 0!=n&&n>=0&&(s=s.toFixed(n)),[i,l,o,s]},geodash.tilemath.point_to_radius=function(e){return(geodash.config.click_radius||4)/e},geodash.tilemath.tms_to_bbox=function(e,a,t){var n=geodash.tilemath.tile_to_lon(e+1,t),r=geodash.tilemath.tile_to_lon(e,t),o=geodash.tilemath.tile_to_lat(a+1,t),i=geodash.tilemath.tile_to_lat(a,t);return[r,o,n,i]},geodash.tilemath.tile_to_lon=function(e,a){return e/Math.pow(2,a)*360-180},geodash.tilemath.tile_to_lat=function(e,a){return n=Math.pi-2*Math.PI*e/Math.pow(2,a),R2D*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))},geodash.http={},geodash.http.build_promises=function(e,a){for(var t=[],n=0;n<a.length;n++){var r=a[n],o={},i=e.get(r,o);t.push(i)}return t},geodash.http.build_features=function(e,a){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(200==r.status){var o=r.data;t=t.concat(geodash.codec.parseFeatures(o,a))}}return t},geodash.layers={},geodash.layers.aggregate_fields=function(e){for(var a=[],t=0;t<e.popup.panes.length;t++)a=a.concat(e.popup.panes[t].fields);return a},geodash.layers.init_baselayers=function(e,a){for(var t={},n=0;n<a.length;n++){var r=a[n];try{t[r.id]=L.tileLayer(r.source.url,{id:r.id,attribution:r.source.attribution})}catch(o){console.log("Could not add baselayer "+n)}}return t},geodash.layers.init_featurelayer_post=function(e,a,t,n,r){void 0!=n?((void 0!=r?r:!0)&&n.addTo(a.map),geodash.api.intend("layerLoaded",{type:"featurelayer",layer:t,visible:r},e)):console.log("Could not add featurelayer "+t+" because it is undefined.")},geodash.layers.init_featurelayer_wms=function(e,a,t,n,r){var o=r.wms,i=L.tileLayer.wms(o.url,{renderOrder:$.inArray(n,t.renderlayers),buffer:o.buffer||0,version:o.version||"1.1.1",layers:Array.isArray(o.layers)?o.layers.join(","):o.layers,styles:o.styles?o.styles.join(","):"",format:o.format||"image/png",transparent:angular.isDefined(o.transparent)?o.transparent:!0,attribution:r.source.attribution});a.featurelayers[n]=i,geodash.layers.init_featurelayer_post(e,a,n,i,r.visible)},geodash.layers.init_featurelayer_geojson=function(e,a,t,n,r){var o=extract("geojson.url",r)||extract("source.url",r)||extract("url",r);$.ajax({url:o,dataType:"json",success:function(t){var o=void 0;if("heatmap"==r.transform){for(var i=[],l=0,s=0;s<t[0].features.length;s++){var d="attribute"in r.heatmap&&""!=r.heatmap.attribute?t[0].features[s].properties[r.heatmap.attribute]:1;i.push([t[0].features[s].geometry.coordinates[1],t[0].features[s].geometry.coordinates[0],d]),d>l&&(l=d)}for(var s=0;s<i.length;s++)i[s][2]=i[s][2]/l;var c=L.heatCanvas();o=L.heatLayer(i,{renderer:c,attribution:r.source.attribution,radius:r.heatmap.radius||25,blur:r.heatmap.blur||15,max:r.heatmap.max||1,minOpacity:r.heatmap.minOpacity||.5})}else o=L.geoJson(t,{attribution:r.source.attribution});a.featurelayers[n]=o,geodash.layers.init_featurelayer_post(e,a,n,o,r.visible)}})},geodash.layers.init_featurelayer=function(e,a,t,n,r){(void 0==a.enabled||1==a.enabled)&&("geojson"==a.type.toLowerCase()?geodash.layers.init_featurelayer_geojson(t,n,r,e,a):"wms"==a.type.toLowerCase()&&geodash.layers.init_featurelayer_wms(t,n,r,e,a))},geodash.layers.init_featurelayers=function(e,a,t,n){$.each(e,function(e,r){geodash.layers.init_featurelayer(r.id,r,a,t,n)})};var sparc={};sparc.welcome=function(e){e=e||{};var a=e.$scope||e.scope||angular.element("#geodash-main").scope(),t={id:"sparc-modal-welcome",modal:{backdrop:"static",keyboard:!1},dynamic:{},"static":{welcome:a.map_config.welcome}};geodash.api.intend("toggleModal",t,a)},geodash.vam_filter_fcs=function(e,a,t){if(void 0!=a.fcs){var n=100;if(0==a.fcs.length)n=0;else if("poor,borderline,acceptable"!=a.fcs.join(",")){console.log("FCS Filter:",a.fcs);var r=t.attributes.admin1_code,o=$.grep(geodash.initial_data.layers.vam.data.geojson.features,function(e,a){return e.properties.admin1_code==r});if(o.length>0){var i=o[0];void 0!=i.properties.vam.fcs&&(n=0,$.each(i.properties.vam.fcs,function(e,t){-1!=$.inArray(e,a.fcs)&&(n+=t)}))}}e*=n/100}return e},geodash.vam_filter_csi=function(e,a,t){if(void 0!=a.csi){var n=100;if(0==a.csi.length)n=0;else if("no,low,medium,high"!=a.csi.join(",")){var r=t.attributes.admin1_code,o=$.grep(geodash.initial_data.layers.vam.data.geojson.features,function(e,a){return e.properties.admin1_code==r});if(o.length>0){var i=o[0];void 0!=i.properties.vam.csi&&(n=0,$.each(i.properties.vam.csi,function(e,t){-1!=$.inArray(e,a.csi)&&(n+=t)}))}}e*=n/100}return e},sparc.calculate_population_at_risk=function(e,a,t,n){var r=0,o=months_short_3[t.month-1];if("cyclone"==e)for(var i=t.filters.popatrisk.prob_class_max,l=t.filters.popatrisk.category,s=0;s<a.attributes.addinfo.length;s++){var d=a.attributes.addinfo[s];d.category==l&&d.prob_class_max>=i&&(console.log("matched prob_class",i),r+=d[o])}else if("drought"==e)for(var i=t.filters.popatrisk.prob_class_max,s=0;s<a.attributes.addinfo.length;s++){var d=a.attributes.addinfo[s];d.month==o&&d.prob_class_max>=i&&(r+=d.popatrisk)}else if("flood"==e){var c=t.filters.popatrisk.rp;r=a.attributes["RP"+c.toString(10)][o]}else"landslide"==e&&(r=a.attributes.values_by_month[o]);return void 0!=n&&$.each(n,function(e,n){r=geodash[n](r,t.filters.popatrisk,a)}),r};var buildGroupsAndColumnsForCountry=function(e,a){var t=[[]],n=[],r=void 0;if("cyclone"==e.hazard)$.each(a.data.summary.prob_class,function(e,a){var r=a.by_month;n.push([e].concat(r)),t[0].push(e)}),t[0].sort(function(e,a){return parseFloat(a.split("-")[0])-parseFloat(e.split("-")[0])}),n.sort(function(e,a){return parseFloat(e[0].split("-")[0])-parseFloat(a[0].split("-")[0])}),r=function(e,a){return parseFloat(a.id.split("-")[0])-parseFloat(e.id.split("-")[0])};else if("drought"==e.hazard){for(var o=0;o<e.groups.length;o++){var i=e.group_prefix,l=e.group_key,s=e.group_modifier,d=e.groups[o],c=a.data.summary[l][""+d*s].by_month;n.push([i+d].concat(c)),t[0].push(i+d)}n.reverse()}else if("flood"==e.hazard){for(var o=0;o<e.groups.length;o++){var i=e.group_prefix,l=e.group_key,d=e.groups[o],s=e.group_modifier,c=a.data.summary[l][""+d*s].by_month;n.push([i+d].concat(c)),t[0].push(i+d)}n.reverse()}else if("landslide"==e.hazard){var c=a.data.summary.all.by_month,d="Population at Risk";n.push([d].concat(c)),t[0].push(d)}return{groups:t,columns:n,order:r}},buildGroupsAndColumnsForAdmin2=function(e,a,t){var n=[[]],r=[],o=void 0;if("cyclone"==e.hazard)$.each(a.data.summary.admin2[t].prob_class,function(e,a){var t=a.by_month;r.push([e].concat(t)),n[0].push(e)}),n[0].sort(function(e,a){return parseFloat(a.split("-")[0])-parseFloat(e.split("-")[0])}),r.sort(function(e,a){return parseFloat(e[0].split("-")[0])-parseFloat(a[0].split("-")[0])}),o=function(e,a){return parseFloat(a.id.split("-")[0])-parseFloat(e.id.split("-")[0])};else if("flood"==e.hazard){for(var i=0;i<e.returnPeriods.length;i++){var l=e.returnPeriods[i],s=a.data.summary.admin2[t].rp[""+l].by_month;r.push(["rp"+l].concat(s)),n[0].push("rp"+l)}r.reverse()}else if("landslide"==e.hazard){var s=a.data.summary.admin2[""+t].by_month,d="Risk";r.push([d].concat(s)),n[0].push(d)}return{groups:n,columns:r,order:o}},buildHazardChart=function(e,a,t){var n=void 0;if("bar"==e.type){n=void 0!=t&&void 0!=t.groups&&void 0!=t.columns?{groups:t.groups,columns:t.columns,order:void 0}:buildGroupsAndColumnsForCountry(e,a);var r=void 0;"bullet"==e.subtype?(r={bullet:!0,width:function(e,a){return"rp25"==e.id?8:16},offset:function(e,a){return 0}},void 0!=t&&void 0!=t.bullet_width&&(r.width=t.bullet_width)):r={width:{ratio:.6}};var o={x:{},y:{}};void 0!=e.axis&&void 0!=e.axis.x&&"months"==e.axis.x.type&&(o.x.tick={format:function(e){return months_short_3[e].toTitleCase()}}),o.y.label=e.axis.y.label,o.y.tick={format:d3.format("s,")};c3.generate({bindto:"#"+(e.element||e.id),data:{columns:n.columns,groups:n.groups,type:"bar",colors:e.colors,order:n.order||"desc"},axis:o,bar:r})}};geodash.config={click_radius:2},geodash.init_country=function(e){var a=$.grep(geodash.map_config.featurelayers,function(e,a){return"context"==e.id})[0],t=a.urls.summary.replace("{iso3}",geodash.initial_state.iso3),n=a.urls.geojson.replace("{iso3}",geodash.initial_state.iso3),r=$.grep(geodash.map_config.featurelayers,function(e,a){return"vam"==e.id})[0],o=r.urls.geojson.replace("{iso3}",geodash.initial_state.iso3);$.when($.ajax({dataType:"json",url:t}),$.ajax({dataType:"json",url:n}),$.ajax({dataType:"json",url:o})).done(function(a,t,n){geodash.initial_data.layers.context.data.summary=a[0],geodash.initial_data.layers.context.data.geojson=t[0],geodash.initial_data.layers.vam.data.geojson=n[0],geodash.breakpoints={},$.each(geodash.initial_data.layers.context.data.summary.all.breakpoints,function(e,a){geodash.breakpoints["context_"+e]=a}),geodash.init_country_main_app(e)})},geodash.init_country_main_app=function(e){geodash.app=app=angular.module(e,["ngRoute","ngSanitize"]),geodash.init.templates(app),geodash.init.filters(app),geodash.init.directives(app),app.factory("state",function(){return $.extend({},geodash.initial_state)}),app.factory("stateschema",function(){return $.extend({},geodash.state_schema)}),app.factory("map_config",function(){return $.extend({},geodash.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geodash.init.listeners(),geodash.init_controller_base(app);var a=$("#geodash-main");init_sparc_controller_main(a,app),angular.bootstrap(document,[e])},geodash.init_countryhazardmonth=function(e){var a=$.grep(geodash.map_config.featurelayers,function(e,a){return"popatrisk"==e.id})[0],t=a.sparc.summary.replace("{iso3}",geodash.initial_state.iso3).replace("{hazard}",geodash.initial_state.hazard),n=a.geojson.url.replace("{iso3}",geodash.initial_state.iso3).replace("{hazard}",geodash.initial_state.hazard),r=$.grep(geodash.map_config.featurelayers,function(e,a){return"context"==e.id})[0],o=r.sparc.summary.replace("{iso3}",geodash.initial_state.iso3),i=r.geojson.url.replace("{iso3}",geodash.initial_state.iso3),l=$.grep(geodash.map_config.featurelayers,function(e,a){return"vam"==e.id})[0],s=l.geojson.url.replace("{iso3}",geodash.initial_state.iso3);$.when($.ajax({dataType:"json",url:t}),$.ajax({dataType:"json",url:n}),$.ajax({dataType:"json",url:o}),$.ajax({dataType:"json",url:i}),$.ajax({dataType:"json",url:s})).done(function(a,t,n,r,o){geodash.initial_data.layers.popatrisk.data.summary=a[0],geodash.initial_data.layers.popatrisk.data.geojson=t[0],geodash.initial_data.layers.context.data.summary=n[0],geodash.initial_data.layers.context.data.geojson=r[0],geodash.initial_data.layers.vam.data.geojson=o[0],geodash.breakpoints={},"all"in geodash.initial_data.layers.popatrisk.data.summary&&$.each(geodash.initial_data.layers.popatrisk.data.summary.all.breakpoints,function(e,a){geodash.breakpoints["popatrisk_"+e]=a}),"all"in geodash.initial_data.layers.context.data.summary&&$.each(geodash.initial_data.layers.context.data.summary.all.breakpoints,function(e,a){geodash.breakpoints["context_"+e]=a}),geodash.init_countryhazardmonth_main_app(e)})},geodash.init_countryhazardmonth_main_app=function(e){geodash.app=app=angular.module(e,["ngRoute","ngSanitize","ngCookies"]),geodash.init.templates(app),geodash.init.filters(app),geodash.init.directives(app),app.factory("state",function(){return $.extend({},geodash.initial_state)}),app.factory("stateschema",function(){return $.extend({},geodash.state_schema)}),app.factory("map_config",function(){return $.extend({},geodash.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geodash.init.listeners(),geodash.init_controller_base(app);var a=$("#geodash-main");init_sparc_controller_main(a,app),angular.bootstrap(document,[e])},geodash.init_explore=function(e){geodash.app=app=angular.module(e,["ngRoute","ngSanitize"]),geodash.init.templates(app),geodash.init.filters(app),geodash.init.directives(app),app.factory("state",function(){return $.extend({},geodash.initial_state)}),
app.factory("stateschema",function(){return $.extend({},geodash.state_schema)}),app.factory("map_config",function(){return $.extend({},geodash.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{}}}),geodash.init.listeners(),geodash.init_controller_base(app);var a=$("#geodash-main");init_sparc_controller_main(a,app),angular.bootstrap(document,[e])};var init_sparc_controller=function(e,a){var t=e.data("controllerName");e.data("controllerType");a.controller(t,function(e,a){init_intents($(a),e)})};geodash.style_cyclone=function(e,a,t,n){var r=geodash.api.getFeatureLayer("popatrisk"),o={},i=a.filters.popatrisk,l=i.popatrisk_range,s=i.ldi_range,d=e.properties.ldi,c=i.erosion_propensity_range,p=e.properties.erosion_propensity,g=i.landcover_delta_negative_range,u=e.properties.delta_negative,h=sparc.calculate_population_at_risk("cyclone",geodash.api.normalize_feature(e),a,n.filters);if(h>=l[0]&&h<=l[1]&&(void 0==d||d>=s[0]&&d<=s[1])&&(void 0==p||p>=c[0]&&p<=c[1])&&(void 0==u||u>=g[0]&&u<=g[1])){for(var f=r.cartography[0].colors.ramp,m=geodash.breakpoints[n.breakpoints],y=void 0,v=0;v<m.length-1;v++)if(h==m[v]&&h==m[v+1]||h>=m[v]&&h<m[v+1]){y=f[v];break}o.fillColor=void 0==y?f[f.length-1]:y}else o.opacity=0,o.fillOpacity=0;return o},geodash.style_drought=function(e,a,t,n){var r=geodash.api.getFeatureLayer("popatrisk"),o={},i=a.filters.popatrisk,l=i.popatrisk_range,s=i.ldi_range,d=e.properties.ldi,c=i.erosion_propensity_range,p=e.properties.erosion_propensity,g=i.landcover_delta_negative_range,u=e.properties.delta_negative,h=sparc.calculate_population_at_risk("drought",geodash.api.normalize_feature(e),a,n.filters);if(h>=l[0]&&h<=l[1]&&(void 0==d||d>=s[0]&&d<=s[1])&&(void 0==p||p>=c[0]&&p<=c[1])&&(void 0==u||u>=g[0]&&u<=g[1])){for(var f=r.cartography[0].colors.ramp,m=geodash.breakpoints[n.breakpoints],y=void 0,v=0;v<m.length-1;v++)if(h==m[v]&&h==m[v+1]||h>=m[v]&&h<m[v+1]){y=f[v];break}o.fillColor=void 0==y?f[f.length-1]:y}else o.opacity=0,o.fillOpacity=0;return o},geodash.style_flood=function(e,a,t,n){var r=geodash.api.getFeatureLayer("popatrisk"),o={},i=a.filters.popatrisk,l=i.popatrisk_range,s=i.ldi_range,d=e.properties.ldi,c=i.erosion_propensity_range,p=e.properties.erosion_propensity,g=i.landcover_delta_negative_range,u=e.properties.delta_negative,h=sparc.calculate_population_at_risk("flood",geodash.api.normalize_feature(e),a,n.filters);if(h>=l[0]&&h<=l[1]&&(void 0==d||d>=s[0]&&d<=s[1])&&(void 0==p||p>=c[0]&&p<=c[1])&&(void 0==u||u>=g[0]&&u<=g[1])){for(var f=r.cartography[0].colors.ramp,m=geodash.breakpoints[n.breakpoints],y=void 0,v=0;v<m.length-1;v++)if(h==m[v]&&h==m[v+1]||h>=m[v]&&h<m[v+1]){y=f[v];break}o.fillColor=void 0==y?f[f.length-1]:y}else o.opacity=0,o.fillOpacity=0;return o},geodash.style_landslide=function(e,a,t,n){var r=geodash.api.getFeatureLayer("popatrisk"),o={},i=a.filters.popatrisk,l=i.popatrisk_range,s=i.ldi_range,d=e.properties.ldi,c=i.erosion_propensity_range,p=e.properties.erosion_propensity,g=i.landcover_delta_negative_range,u=e.properties.delta_negative,h=sparc.calculate_population_at_risk("landslide",geodash.api.normalize_feature(e),a,n.filters);if(h>=l[0]&&h<=l[1]&&(void 0==d||d>=s[0]&&d<=s[1])&&(void 0==p||p>=c[0]&&p<=c[1])&&(void 0==u||u>=g[0]&&u<=g[1])){for(var f=r.cartography[0].colors.ramp,m=geodash.breakpoints[n.breakpoints],y=void 0,v=0;v<m.length-1;v++)if(h==m[v]&&h==m[v+1]||h>=m[v]&&h<m[v+1]){y=f[v];break}o.fillColor=void 0==y?f[f.length-1]:y}else o.opacity=0,o.fillOpacity=0;return o},geodash.style_context=function(e,a,t,n){var r=geodash.api.getFeatureLayer("context"),o={},i=(a.filters.context,a.styles.context),l=$.grep(r.cartography,function(e,a){return e.id==i}),s=1==l.length?l[0]:r.cartography[0],d=!0;if("mask"in s&&(1==e.properties[s.mask]?d=!0:(o.fillColor=s.colors.outside,d=!1)),d){for(var c=e.properties[s.attribute],p=s.colors.ramp,g=s.breakpoints||"natural_adjusted",u=geodash.initial_data.layers.context.data.summary.all.breakpoints[g],h=void 0,f=0;f<u.length-1;f++)if(c==u[f]&&c==u[f+1]||c>=u[f]&&c<u[f+1]){h=p[f];break}o.fillColor=void 0==h?p[p.length-1]:h}return o},geodash.meta={},geodash.meta.projects=[{name:"geodash",version:"0.0.1",description:"geodash.js 0.0.1"},{name:"SPARC 2.x",version:"0.0.1",description:"SPARC 2.x"}],geodash.meta.plugins=[{controllers:["controller_base.js"],directives:["svg.js","onLinkDone.js","onRepeatDone.js","geodashModalDashboardConfig.js","tab.js","geodashBtnClose.js","geodashBtnInfo.js","geodashBtnClear.js"],enumerations:["dates.js"],templates:["geodash_modal_dashboard_config.tpl.html","geodash_tab.tpl.html","geodash_btn_close.tpl.html","geodash_btn_info.tpl.html","geodash_btn_clear.tpl.html"],filters:["default.js","md2html.js","percent.js","tabLabel.js","as_float.js","add.js","title.js","as_array.js","sortItemsByArray.js","breakpoint.js","breakpoints.js","position_x.js","width_x.js","length.js","layer_is_visible.js","common/append.js","common/default_if_undefined.js","common/default_if_undefined_or_blank.js","common/extract.js","common/inArray.js","common/prepend.js","common/ternary.js","common/ternary_defined.js","common/yaml.js","array/join.js","array/first.js","array/last.js","array/choose.js","format/formatBreakPoint.js","format/formatFloat.js","format/formatInteger.js","format/formatArray.js","format/formatMonth.js m","math/eq.js","math/lte.js","math/gte.js","math/gt.js","string/replace.js","string/split.js","url/url_shapefile.js","url/url_geojson.js","url/url_kml.js","url/url_describefeaturetype.js"],project:"geodash",id:"base"},{controllers:["controller_legend.js"],directives:["geodashModalLayerCarto.js","geodashModalLayerMore.js","geodashModalLayerConfig.js","geodashSymbolCircle.js","geodashSymbolEllipse.js","geodashSymbolGraduated.js","geodashSymbolGraphic.js","geodashLegendBaselayers.js","geodashLegendFeaturelayers.js"],templates:["modal/geodash_modal_layer_carto.tpl.html","modal/geodash_modal_layer_more.tpl.html","modal/geodash_modal_layer_config.tpl.html","symbol/symbol_circle.tpl.html","symbol/symbol_ellipse.tpl.html","symbol/symbol_graduated.tpl.html","symbol/symbol_graphic.tpl.html","legend_baselayers.tpl.html","legend_featurelayers.tpl.html"],less:["legend.less"],project:"geodash",id:"legend"},{controllers:[],directives:["geodashModalWelcome.js"],templates:["modal/geodash_modal_welcome.tpl.html"],project:"geodash",id:"welcome"},{controllers:[],directives:["geodashModalAbout.js"],templates:["geodash_modal_about.tpl.html"],project:"geodash",id:"about"},{controllers:[],directives:["geodashModalDownload.js"],templates:["geodash_modal_download.tpl.html"],project:"geodash",id:"download"},{controllers:[],directives:["geodashMapOverlays.js"],templates:["map_overlays.tpl.html"],less:["map_overlays.less"],project:"geodash",id:"overlays"},{controllers:["controller_breadcrumb.js"],directives:["geodashBreadcrumbs.js"],enumerations:["breadcrumbs.js"],templates:["breadcrumbs.tpl.html"],less:["breadcrumbs.less"],project:"SPARC 2.x",id:"breadcrumbs"},{controllers:["controller_calendar.js"],directives:["geodashCalendar.js"],templates:["calendar.tpl.html"],less:["calendar.less"],project:"SPARC 2.x",id:"calendar"},{controllers:["controller_filter.js"],directives:["geodashModalFilterMore.js","geodashFilterCheckbox.js","geodashFilterRadio.js","geodashFilterSlider.js","geodashFilterContainer.js"],templates:["modal/modal_filter_more.tpl.html","filter/filter_checkbox.tpl.html","filter/filter_radio.tpl.html","filter/filter_slider.tpl.html","filter_container.tpl.html"],less:["filter.less"],project:"SPARC 2.x",id:"filter"},{controllers:["controller_map_map.js"],directives:[],templates:[],less:["main_map.less"],project:"SPARC 2.x",id:"map_map"},{controllers:["controller_sparc_sidebar.js"],directives:["sparcSidebar.js","sparcSidebarFeatureLayer.js"],templates:["sparc_sidebar.tpl.html","sparc_sidebar_featurelayer.tpl.html"],less:["sidebar.less","sidebar-toggle.less"],project:"SPARC 2.x",id:"sparc_sidebar"},{controllers:["controller_main.js"],directives:[],templates:[],project:"SPARC 2.x",id:"main"},{controllers:["controller_sparc_welcome.js"],directives:["sparcModalWelcome.js"],templates:["modal_welcome_sparc.tpl.html"],less:["sparc_welcome.less"],project:"SPARC 2.x",id:"sparc_welcome"}],geodash.templates={},geodash.templates["geodash_modal_dashboard_config.tpl.html"]='<div class="modal-dialog geodash-responsive" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Configuration / {{ map_config.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li label="Projects" target="#modal-dashboard-config-projects" active="true" geodash-tab></li>\n          <li label="Plugins" target="#modal-dashboard-config-plugins" geodash-tab></li>\n          <li label="Directives" target="#modal-dashboard-config-directives" geodash-tab></li>\n          <li label="Templates" target="#modal-dashboard-config-templates" geodash-tab></li>\n          <li label="Filters" target="#modal-dashboard-config-filters" geodash-tab></li>\n          <li label="YAML" target="#modal-dashboard-config-yaml" geodash-tab></li>\n          <li label="JSON" target="#modal-dashboard-config-json" geodash-tab></li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-dashboard-config-projects"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Projects</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Version</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="project in meta.projects track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="project.name"></td>\n                  <td ng-bind-html="project.version"></td>\n                  <td ng-bind-html="project.description"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-plugins"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Plugins</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Project</th>\n                  <th>Name</th>\n                  <th>Version</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="plugin in meta.plugins track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="plugin.project"></td>\n                  <td ng-bind-html="plugin.id"></td>\n                  <td ng-bind-html="plugin.version"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-directives"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Directives</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="directive in meta.directives track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="directive"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-templates"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Templates</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="template in meta.templates track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="template"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-filters"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Filters</h3>\n            <table class="table">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr ng-repeat="filter in meta.filters track by $index">\n                  <th scope="row" ng-bind-html="$index"></th>\n                  <td ng-bind-html="filter"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div\n            id="modal-dashboard-config-yaml"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Dashboard Configuration as YAML</h3>\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ map_config | yaml : 8 }}</pre>\n          </div>\n          <div\n            id="modal-dashboard-config-json"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <h3>Dashboard Configuration as JSON</h3>\n            <pre style="word-wrap: break-word; white-space: pre-wrap;">{{ map_config | json }}</pre>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_tab.tpl.html"]='<li\n  role="presentation"\n  ng-class="(active && active != \'false\') ? \'active\' : \'\'">\n  <a\n    href="#{{ target }}"\n    aria-controls="{{ target }}"\n    role="tab"\n    data-toggle="tab"\n    style="padding-left:8px; padding-right: 8px; height: {{ height | default_if_undefined : \'auto\'}}">{{ label }}</a>\n</li>\n',geodash.templates["geodash_btn_close.tpl.html"]='<button\n  type="button"\n  class="close"\n  data-dismiss="{{ dismiss | default_if_undefined: \'modal\' }}"\n  aria-hidden="true"><i class="fa fa-times"></i></button>\n',geodash.templates["geodash_btn_info.tpl.html"]='<div\n  class="input-group-addon btn btn-primary"\n  data-toggle="tooltip"\n  data-placement="{{ placement | default_if_undefined : \'left\' }}"\n  ng-attr-title="{{ info }}">\n  <i class="fa fa-info-circle"></i>\n</div>\n',geodash.templates["geodash_btn_clear.tpl.html"]='<div\n  class="input-group-addon btn btn-danger btn-clear"\n  data-clear="{{ target }}">\n  <i class="fa fa-times"></i>\n</div>\n',geodash.templates["geodash_modal_layer_carto.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }} / Cartography</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Style:</b></p>\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="style in layer.cartography track by $index">\n            <a\n              class="geodash-intent"\n              href="#modal-layer-carto-style-{{ style.id }}"\n              aria-controls="modal-layer-carto-style-{{ style.id }}"\n              data-intent-name="selectStyle"\n              data-intent-data="{&quot;layer&quot;:&quot;{{ layerID }}&quot;,&quot;style&quot;:&quot;{{ style.id }}&quot;}"\n              data-intent-ctrl="geodash-map-legend"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="style.title | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="style in layer.cartography track by $index"\n            id="modal-layer-carto-style-{{ style.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Attribute: </b><span>{{ style.attribute | default:"Not styled by attribute" }}</span></span><br>\n            <span><b>Mask: </b><span ng-bind-html="style.mask | md2html | default:\'No Mask\'"></span></span><br>\n            <span><b>Description: </b><span ng-bind-html="style.description | md2html | default:\'Not specified\'"></span></span>\n            <br>\n            <br>\n            <div\n              ng-if="style.type == \'graduated\'"\n              geodash-symbol-graduated\n              style="style"\n              container-width="{{ \'392px\' }}">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'circle\'"\n              geodash-symbol-circle\n              style="style">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'graphic\'"\n              geodash-symbol-graphic\n              style="style">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_layer_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-layer-more-general"\n              aria-controls="modal-layer-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-attributes"\n              aria-controls="modal-layer-more-attributes"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Attributes</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-source"\n              aria-controls="modal-layer-more-source"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Source</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wms"\n              aria-controls="modal-layer-more-wms"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WMS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wfs"\n              aria-controls="modal-layer-more-wfs"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WFS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-download"\n              aria-controls="modal-layer-more-download"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Download</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-layer-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="layer.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ layer.type }}\n            <br><br><b>Source:</b> {{ layer.source.name | default:"Not specified" }}\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-attributes"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div>\n              Placeholder\n            </div>\n          </div>\n          <div\n            ng-if="layer.source"\n            id="modal-layer-more-source"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Name:</b> {{ layer.source.name | default:"Not specified" }}</span><br>\n            <span><b>Attribution:</b> {{ layer.source.attribution | default:"Not specified" }}</span><br>\n            <span><b>URL:</b> {{ layer.source.url | default:"Not specified" }}</span><br>\n          </div>\n          <div\n            ng-if="layer.wms"\n            id="modal-layer-more-wms"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wms.url | default:"Not specified" }}</span><br>\n            <span><b>Layers:</b> {{ layer.wms.layers|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Styles:</b> {{ layer.wms.styles|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Format:</b> {{ layer.wms.format | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wms.version | default:"Not specified" }}</span><br>\n            <span><b>Transparent:</b> {{ layer.wms.transparent | default:"No" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetCapabilities">Capabilities</a><br>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetLegendGraphic&format=image/png&layer={{ layer.wms.layers|first }}">Legend Graphic</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-wfs"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wfs.url | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wfs.version | default:"Not specified" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer | url_describefeaturetype }}">Describe Feature Type</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-download"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Download Shapefile</b>: <a target="_blank" href="{{ layer | url_shapefile }}">All</a>, <a target="_blank" href="{{ layer | url_shapefile:state }}">Current Extent</a><br>\n            <span><b>Download GeoJSON</b>: <a target="_blank" href="{{ layer | url_geojson }}">All</a>, <a target="_blank" href="{{ layer | url_geojson:state }}">Current Extent</a><br>\n            <span><b>Download Google Earth KML</b>: <a target="_blank" href="{{ layer | url_kml }}">All</a>, <a target="_blank" href="{{ layer | url_kml:state }}">Current Extent</a><br>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_layer_config.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li class="active" role="presentation">\n            <a href="#modal-layer-config-input"\n              aria-controls="modal-layer-config-input"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Configure</a>\n          </li>\n          <li class="" role="presentation">\n            <a href="#modal-layer-config-output"\n              aria-controls="modal-layer-config-output"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Output</a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            id="modal-layer-config-input"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Title</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Title</label>\n                <input\n                  id="layer-config-title"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geodash-field-type="text"\n                  ng-model="layer.title"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.title }}">\n              </div>\n            </div>\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Description</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Description</label>\n                <input\n                  id="layer-config-description"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geodash-field-type="text"\n                  ng-model="layer.description"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.Description }}">\n              </div>\n            </div>\n          </div>\n          <div\n            id="modal-layer-config-output"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            {{ layer | json }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["symbol_circle.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <circle\n      cx="50%"\n      cy="50%"\n      ng-r="{{ style.legend.symbol.radius }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geodash.templates["symbol_ellipse.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <ellipse\n      cx="50%"\n      cy="50%"\n      ng-rx="{{ style.legend.symbol.width }}"\n      ng-ry="{{ style.legend.symbol.height }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geodash.templates["symbol_graduated.tpl.html"]='<div>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.ramp.label.left | md2html"></div>\n  <svg\n    ng-attr-width="{{ containerWidth }}"\n    height="90px"\n    version="1.0"\n    xmlns="http://www.w3.org/2000/svg">\n    <g>\n      <rect\n        ng-repeat="color in style.colors.ramp track by $index"\n        ng-attr-x="{{ style.colors.ramp | length | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ \'0\' }}"\n        ng-attr-width="{{ style.colors.ramp | length | width_x : containerWidth : 26 }}px"\n        height="50px"\n        ng-attr-fill="{{ color }}"\n        stroke-width="1"\n        stroke="#000000"/>\n    </g>\n    <g>\n      <text\n        ng-repeat="breakpoint in style | breakpoints track by $index"\n        ng-attr-x="{{ style | breakpoints | length | add: -1 | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ $index | choose : 68 : 82 }}px"\n        text-anchor="middle"\n        ng-attr-fill="{{ \'black\' }}"\n        font-size="14px"\n        text-decoration="underline"\n        font-family="\'Open Sans\', sans-serif">{{ style | breakpoint: $index | formatBreakpoint }}</text>\n    </g>\n  </svg>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.ramp.label.right | md2html"></div>\n</div>\n',geodash.templates["symbol_graphic.tpl.html"]='<i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n',geodash.templates["legend_baselayers.tpl.html"]='<div class="geodash-map-legend-baselayers geodash-radio-group">\n  <div\n    ng-repeat="layer in baselayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.legend!==undefined"\n    class="geodash-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geodash-map-legend-item-left">\n      <div class="geodash-map-legend-item-icon geodash-map-legend-item-more">\n        <a\n          class="geodash-intent"\n          data-intent-ctrl="geodash-map-legend"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'baselayer\', layer) }}">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geodash-map-legend-item-icon geodash-map-legend-item-visibility">\n           <a\n             ng-class=" layer.id == state.view.baselayer ? \'geodash-map-legend-item-visibility-button geodash-intent geodash-radio geodash-on\' : \'geodash-map-legend-item-visibility-button geodash-intent geodash-radio\'"\n             data-intent-name="switchBaseLayer"\n             data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n             data-intent-class-on="geodash-on"\n             data-intent-class-off=""\n             data-intent-ctrl="geodash-map-legend">\n             <i class="fa fa-eye geodash-on"></i><i class="fa fa-eye-slash geodash-off"></i>\n           </a>\n         </div><!--\n      --><div class="geodash-map-legend-item-symbol" style="width: 10px;"></div>\n    </div><!--\n    --><div class="geodash-map-legend-item-right">\n      <div\n        class="geodash-map-legend-item-label"\n        style="{{ layer.id == state.view.baselayer ? \'width: 100%;\' : \'width: 100%;opacity: 0.4;\' }}">\n        <span ng-bind-html="layer.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geodash.templates["legend_featurelayers.tpl.html"]='<div class="geodash-map-legend-featurelayers">\n  <div\n    ng-repeat="layer in featurelayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.legend!==undefined"\n    class="geodash-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geodash-map-legend-item-left">\n      <div class="geodash-map-legend-item-icon geodash-map-legend-item-config" style="display:none;">\n        <a\n          class="geodash-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-config\', \'featurelayer\', layer) }}"\n          data-intent-ctrl="geodash-map-legend">\n          <i class="fa fa-cog"></i>\n        </a>\n      </div><!--\n      --><div class="geodash-map-legend-item-icon geodash-map-legend-item-more">\n        <a\n          class="geodash-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'featurelayer\', layer) }}"\n          data-intent-ctrl="geodash-map-legend">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geodash-map-legend-item-icon geodash-map-legend-item-visibility">\n         <a\n           ng-class="layer.id | inArray : state.view.featurelayers | ternary : \'geodash-map-legend-item-visibility-button geodash-intent geodash-toggle\' : \'geodash-map-legend-item-visibility-button geodash-intent geodash-toggle geodash-off\'"\n           data-intent-names="[&quot;showLayer&quot;,&quot;hideLayer&quot;]"\n           data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n           data-intent-ctrl="geodash-map-legend">\n           <i class="fa fa-eye geodash-on"></i><i class="fa fa-eye-slash geodash-off"></i>\n         </a>\n     </div><!--\n     --><div\n          ng-class="layer.type == \'geojson\' ? \'geodash-map-legend-item-icon geodash-map-legend-item-zoomto\': \'geodash-map-legend-item-icon geodash-map-legend-item-zoomto fade disabled\'">\n        <a\n          class="geodash-map-legend-item-zoomto-button geodash-intent"\n          data-intent-name="zoomToLayer"\n          data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n          data-intent-ctrl="geodash-map-legend">\n          <i class="fa fa-compress"></i>\n        </a>\n      </div>\n    </div><!--\n    --><div class="geodash-map-legend-item-right">\n      <div\n        ng-if="layer.cartography[0].legend.symbol"\n        class="geodash-map-legend-item-symbol">\n        <a\n          class="geodash-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-carto\', \'featurelayer\', layer) }}"\n          data-intent-ctrl="geodash-map-legend">\n          <div ng-if="layer.cartography[0].legend.symbol.type == \'circle\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <circle\n                cx="50%"\n                cy="50%"\n                ng-r="{{ layer.cartography[0].legend.symbol.radius }}"\n                ng-fill="{{ layer.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div ng-if="layer.cartography[0].legend.symbol.type == \'ellipse\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <ellipse\n                cx="50%"\n                cy="50%"\n                ng-rx="{{ layer.cartography[0].legend.symbol.width }}"\n                ng-ry="{{ layer.cartography[0].legend.symbol.height }}"\n                ng-fill="{{ layer.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.cartography[0].legend.symbol.type == \'graduated\'">\n            <svg\n              ng-attr-width="{{ layer.cartography[0].legend.symbol.width }}"\n              height="100%"\n              version="1.0"\n              xmlns="http://www.w3.org/2000/svg">\n              <rect\n                ng-repeat="color in layer.cartography[0].colors.ramp track by $index"\n                ng-attr-x="{{ $index|percent:layer.cartography[0].colors.ramp.length }}%"\n                y="0"\n                ng-attr-width="{{ 1|percent:layer.cartography[0].colors.ramp.length }}%"\n                ng-attr-height="{{ layer.cartography[0].legend.symbol.height }}"\n                ng-attr-fill="{{ color }}"\n                stroke-width="1"\n                stroke="#000000"/>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.cartography[0].legend.symbol.type == \'graphic\'">\n            <i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n          </div>\n        </a>\n      </div><!--\n      --><div\n           class="geodash-map-legend-item-label"\n           style="{{ layer.id | inArray : state.view.featurelayers | ternary : \'\' : \'opacity: 0.4;\' }}">\n        <span ng-bind-html="layer.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',
geodash.templates["geodash_modal_welcome.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-general"\n              aria-controls="modal-welcome-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.general | md2html | default:\'No body given.\'"></span>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_about.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">{{ about.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in about.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in about.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["geodash_modal_download.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button geodash-btn-close></button>\n      <h4 class="modal-title" id="myModalLabel">{{ download.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in download.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in download.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["map_overlays.tpl.html"]='<div class="geodash-map-overlays">\n  <div ng-repeat="overlay in map_config.overlays track by $index">\n    <div\n      ng-if="overlay.type == \'text\'"\n      data-overlay-index="{{ $index }}"\n      data-overlay-type="text"\n      class="geodash-map-overlay"\n      height="{{ overlay.height | default_if_undefined : initial }}"\n      width="{{ overlay.width | default_if_undefined : initial }}"\n      style="{{ style(overlay.type, overlay) }}"\n      ng-bind-html="overlay.text.content | md2html"\n      on-link-done="overlayLoaded">\n    </div>\n    <div\n      ng-if="overlay.type == \'image\'"\n      data-overlay-index="{{ $index }}"\n      data-overlay-type="image"\n      class="geodash-map-overlay"\n      style="display: inline-block; {{ style(overlay.type, overlay) }}"\n      on-link-done="overlayLoaded">\n      <img\n        ng-src="{{ overlay.image.url }}"\n        width="{{ overlay.width }}"\n        height="{{ overlay.height }}">\n    </div>\n  </div>\n</div>\n',geodash.templates["breadcrumbs.tpl.html"]='<div>\n  <div>\n    <a class="btn btn-primary btn-large" title="Explore" href="/explore">Explore &gt;&gt;</a>\n  </div>\n  <div\n    ng-repeat="bc in breadcrumbs track by $index">\n    <select\n      id="{{ bc.id }}"\n      data-output="{{ bc.output }}"\n      data-width="{{ bc.width }}"\n      data-height="{{ bc.height }}"\n      data-initial-data="{{ bc.data }}"\n      data-breadcrumbs="{{ bc.breadcrumbs }}">\n      <option\n        ng-if="bc.type == \'country\'"\n        value="{{ state.iso3 }}"\n        selected="selected">{{ state.country_title }}</option>\n      <option\n        ng-if="bc.type == \'hazard\'"\n        value="{{ state.hazard }}"\n        selected="selected">{{ state.hazard_title }}</option>\n      <option\n        ng-if="bc.type != \'country\' && bc.type != \'hazard\'"\n        value="placeholder"\n        selected="selected">{{ bc.placeholder }}</option>\n    </select>\n  </div>\n</div>\n',geodash.templates["calendar.tpl.html"]='<ul class="nav nav-justified geodash-radio-group">\n  <li\n    ng-repeat="month in months track by $index">\n    <a\n      ng-class="state.month == month.num ? \'btn btn-primary selected geodash-intent geodash-radio geodash-on\' : \'btn btn-default geodash-intent geodash-radio\'"\n      title="{{ month.long }}"\n      href="/country/{{ state.iso3 }}/hazard/{{ state.hazard }}/month/{{ month.num }}"\n      data-intent-name="stateChanged"\n      data-intent-data="{&quot;month&quot;: {{ month.num }} }"\n      data-intent-ctrl="sparc-map-calendar"\n      data-intent-class-on="btn-primary selected"\n      data-intent-class-off="btn-default" ng-bind-html="month.short3 | title"></a>\n  </li>\n</ul>\n',geodash.templates["modal_filter_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>\n      <h4 class="modal-title" id="myModalLabel">Filter / {{ filter.label }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            class="active">\n            <a\n              href="#modal-filter-more-general"\n              aria-controls="modal-filter-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li\n            ng-if="filter.type == \'checkbox\' && filter.checkbox.options"\n            role="presentation"\n            class="">\n            <a\n              href="#modal-filter-more-options"\n              aria-controls="modal-filter-more-options"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Options</a>\n          </li>\n          <li\n            ng-if="filter.type == \'slider\' && filter.slider.options"\n            role="presentation"\n            class="">\n            <a\n              href="#modal-filter-more-options"\n              aria-controls="modal-filter-more-options"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Options</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-filter-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="filter.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ filter.type }}\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'continuous\'">\n              <b>Minimum Value:</b> <span ng-bind-html="filter.slider.min | formatInteger:\'delimited\':\' \'"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'continuous\'">\n              <b>Maximum Value:</b> <span ng-bind-html="filter.slider.max | formatInteger:\'delimited\':\' \'"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'ordinal\'">\n              <b>Minimum Value:</b> <span ng-bind-html="filter.slider.options | first"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'ordinal\'">\n              <b>Maximum Value:</b> <span ng-bind-html="filter.slider.options | last"></span>\n            </div>\n            <hr>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'ordinal\'">\n              <b>Current Value:</b> <span ng-bind-html="value"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'continuous\'">\n              <b>Current Value:</b> <span ng-bind-html="value | join:\' - \'"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'checkbox\'">\n              <b>Current Value:</b> <span ng-bind-html="value | formatArray"></span>\n            </div>\n          </div>\n          <div\n            ng-if="filter.type == \'checkbox\' && filter.checkbox.options"\n            id="modal-filter-more-options"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              ng-repeat-start="option in filter.checkbox.options track by $index">\n              <i ng-class="option.checked ? \'fa fa-check-square-o\' : \'fa fa-square-o\'"></i>\n              <b ng-bind-html="option.label"></b>:\n              <span ng-bind-html="option.description | default_if_undefined:\'No description given\'"></span>\n            </span>\n            <br>\n            <br ng-repeat-end>\n          </div>\n          <div\n            ng-if="filter.type == \'slider\' && filter.slider.options"\n            id="modal-filter-more-options"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              ng-repeat-start="option in filter.slider.options track by $index">\n              <i ng-class="option.checked ? \'fa fa-check-square-o\' : \'fa fa-square-o\'"></i>\n              <b ng-bind-html="option"></b>\n            </span>\n            <br ng-repeat-end>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geodash.templates["filter_checkbox.tpl.html"]='<div class="geodash-filter geodash-filter-checkbox" style="height: {{ filter.height }};">\n  <div class="geodash-filter-label">\n    <a\n      class="geodash-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geodash-modal-filter-more&quot;,&quot;static&quot;:{&quot;tab&quot;:&quot;modal-filter-more-general&quot;},&quot;dynamic&quot;:{&quot;value&quot;:[&quot;state&quot;,&quot;filters&quot;,&quot;popatrisk&quot;,&quot;{{ filter.checkbox.output }}&quot;],&quot;filter&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}"\n      data-intent-ctrl="geodash-map-filter">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div\n    class="btn-group"\n    style="float:left;"\n    data-toggle="buttons"\n    data-output="{{ filter.checkbox.output }}">\n    <label\n      ng-repeat="opt in filter.checkbox.options track by $index"\n      ng-class="opt.checked ? \'btn btn-sm btn-warning active\' : \'btn btn-sm btn-default\'">\n      <input\n        type="checkbox"\n        id="{{ opt.id }}"\n        data-value="{{ opt.value }}"\n        autocomplete="off"\n        ng-checked="opt.checked || opt.selected"/>\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n',geodash.templates["filter_radio.tpl.html"]='<div class="geodash-filter geodash-filter-radio" style="height: {{ filter.height }};">\n  <div class="geodash-filter-label">\n    <a\n      class="geodash-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geodash-modal-filter-more&quot;,&quot;static&quot;:{&quot;tab&quot;:&quot;modal-filter-more-general&quot;},&quot;dynamic&quot;:{&quot;value&quot;:[&quot;state&quot;,&quot;filters&quot;,&quot;popatrisk&quot;,&quot;{{ filter.radio.output }}&quot;],&quot;filter&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}"\n      data-intent-ctrl="geodash-map-filter">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div\n    class="btn-group"\n    style="float:left;"\n    data-toggle="buttons"\n    data-output="{{ filter.radio.output }}">\n    <label\n      ng-repeat="opt in filter.radio.options track by $index"\n      ng-class="opt.checked ? \'btn btn-default active\' : \'btn btn-default\'">\n      <input\n        type="radio"\n        id="{{ opt.id }}"\n        name="{{ opt.name }}"\n        value="{{ opt.value }}"\n        data-output="{{ filter.radio.output }}"\n        ng-checked="opt.checked || opt.selected"/>\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n',geodash.templates["filter_slider.tpl.html"]='<div class="geodash-filter geodash-filter-slider" style="height: {{ filter.height }};">\n  <div class="geodash-filter-label">\n    <a\n      class="geodash-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geodash-modal-filter-more&quot;,&quot;static&quot;:{&quot;tab&quot;:&quot;modal-filter-more-general&quot;},&quot;dynamic&quot;:{&quot;value&quot;:[&quot;state&quot;,&quot;filters&quot;,&quot;popatrisk&quot;,&quot;{{ filter.slider.output }}&quot;],&quot;filter&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}"\n      data-intent-ctrl="geodash-map-filter">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div style="display:table; height:{{ filter.height }};padding-left:10px;padding-right:10px;">\n    <div style="display:table-cell;vertical-align:middle;">\n      <div class="geodash-filter-slider-label">Placeholder</div>\n      <div\n        class="geodash-filter-slider-slider"\n        style="width:{{ filter.slider.width }};"\n        data-type="{{ filter.slider.type }}"\n        data-value="{{ filter.slider.value ? filter.slider.value : \'\' }}"\n        data-values="{{ filter.slider.values ? filter.slider.values : \'\' }}"\n        data-range="{{ filter.slider.range == \'true\' ? \'true\': filter.slider.range }}"\n        data-output="{{ filter.slider.output }}"\n        data-min-value="{{ filter.slider.min|default_if_undefined:\'\' }}"\n        data-max-value="{{ filter.slider.max|default_if_undefined:\'\' }}"\n        data-step="{{ filter.slider.step ? filter.slider.step : \'\' }}"\n        data-options="{{ filter.slider.options ? filter.slider.options : \'\' }}"\n        data-label-template="{{ filter.slider.label }}"\n        ></div>\n    </div>\n  </div>\n</div>\n',geodash.templates["filter_container.tpl.html"]='<div id="geodash-map-filter-container" class="collapse" style="">\n  <div\n    ng-repeat="filter in filters track by $index">\n    <div geodash-filter-radio ng-if="filter.type == \'radio\'"></div>\n    <div geodash-filter-checkbox ng-if="filter.type == \'checkbox\'"></div>\n    <div geodash-filter-slider ng-if="filter.type == \'slider\'"></div>\n  </div>\n</div>\n',geodash.templates["sparc_sidebar.tpl.html"]='<div\n  id="sparc-sidebar-left"\n  class="geodash-sidebar geodash-sidebar-left geodash-controller sidebar-open sidebar-left-open">\n  <div class="geodash-sidebar-charts" style="width:100%;">\n    <!-- Nav tabs -->\n    <ul class="nav nav-tabs" role="tablist">\n      <li label="Welcome" target="sparc-sidebar-left-welcome" active="true" geodash-tab></li>\n      <li label="Charts" target="sparc-sidebar-left-charts" active="false" geodash-tab></li>\n      <li label="Layers" target="sparc-sidebar-left-layers" active="false" geodash-tab></li>\n    </ul>\n    <!-- Tab panes -->\n    <div class="tab-content">\n      <div\n        id="sparc-sidebar-left-welcome"\n        role="tabpanel"\n        class="tab-pane fade in active"\n        style="padding: 10px;">\n        <div\n          ng-bind-html="map_config.welcome.intro | md2html">\n        </div>\n      </div>\n      <div\n        id="sparc-sidebar-left-charts"\n        role="tabpanel"\n        class="tab-pane fade"\n        style="padding: 10px;">\n        <div\n          ng-repeat="chart in charts track by $index"\n          on-repeat-done="chart_done"\n          data-repeat-index="{{ $index }}"\n          id="sparc-sidebar-left-charts-chart-{{ chart.id }}">\n          <div>\n            <h4\n              style="text-align:center;"\n              ng-bind-html="chart.title | md2html"></h4>\n          </div>\n          <div\n            id="{{ chart.element }}"\n            class="geodash-sidebar-chart"\n            style="width:360px;margin:0 auto;"\n          ></div>\n        </div>\n      </div>\n      <div\n        id="sparc-sidebar-left-layers"\n        role="tabpanel"\n        class="tab-pane fade"\n        style="padding: 10px;">\n        <h4>Selected Layers</h4>\n        <div class="geodash-sidebar-sparclayers">\n          <div\n            ng-repeat="layer in visiblefeaturelayers track by $index"\n            ng-init="layerIndex = $index"\n            ng-if="layer.legend!==undefined"\n            class="geodash-sidebar-item noselect"\n            data-layer="{{ layer.id }}">\n            <div class="geodash-sidebar-item-left">\n              <div class="geodash-sidebar-item-icon geodash-sidebar-item-visibility">\n                 <a\n                   class="geodash-sidebar-item-visibility-button geodash-intent"\n                   data-intent-name="hideLayer"\n                   data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n                   data-intent-ctrl="sparc-sidebar-left">\n                   <i class="fa fa-times"></i>\n                 </a>\n              </div><!--\n              --><div class="geodash-sidebar-item-icon geodash-sidebar-item-more">\n                <a\n                  class="geodash-intent"\n                  data-intent-name="toggleModal"\n                  data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'featurelayer\', layer) }}"\n                  data-intent-ctrl="sparc-sidebar-left">\n                  <i class="fa fa-info-circle"></i>\n                </a>\n              </div><!--\n              --><div\n                   ng-class="layer.type == \'geojson\' ? \'geodash-sidebar-item-icon geodash-sidebar-item-zoomto\': \'geodash-sidebar-item-icon geodash-sidebar-item-zoomto fade disabled\'">\n                 <a\n                   class="geodash-sidebar-item-zoomto-button geodash-intent"\n                   data-intent-name="zoomToLayer"\n                   data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n                   data-intent-ctrl="sparc-sidebar-left">\n                   <i class="fa fa-compress"></i>\n                 </a>\n              </div>\n            </div><!--\n            --><div class="geodash-sidebar-item-right">\n              <div\n                class="geodash-sidebar-item-label"\n                style="width: 100%;">\n                <span ng-bind-html="layer.legend.label | md2html"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr>\n        <h4>SPARC Layers</h4>\n        <div class="geodash-sidebar-sparclayers">\n          <div\n            ng-repeat="layer in sparclayers track by $index"\n            ng-init="layerIndex = $index"\n            ng-if="layer.legend!==undefined"\n            class="geodash-sidebar-item noselect"\n            data-layer="{{ layer.id }}">\n            <div class="geodash-sidebar-item-left">\n              <div class="geodash-sidebar-item-icon geodash-sidebar-item-more">\n                <a\n                  class="geodash-intent"\n                  data-intent-name="toggleModal"\n                  data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'featurelayer\', layer) }}"\n                  data-intent-ctrl="sparc-sidebar-left">\n                  <i class="fa fa-info-circle"></i>\n                </a>\n              </div>\n            </div><!--\n            --><div class="geodash-sidebar-item-right">\n              <div\n                class="geodash-sidebar-item-label geodash-intent"\n                style="width: 100%; opacity: 0.6;"\n                data-intent-name="showLayer"\n                data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n                data-intent-ctrl="sparc-sidebar-left">\n                <span ng-bind-html="layer.legend.label | md2html"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr>\n        <h4>WFP Layers</h4>\n        <div class="geodash-sidebar-sparclayers">\n          <div\n            ng-repeat="layer in wfplayers track by $index"\n            ng-init="layerIndex = $index"\n            ng-if="layer.legend!==undefined"\n            class="geodash-sidebar-item noselect"\n            data-layer="{{ layer.id }}">\n            <div class="geodash-sidebar-item-left">\n              <div class="geodash-sidebar-item-icon geodash-sidebar-item-more">\n                <a\n                  class="geodash-intent"\n                  data-intent-name="toggleModal"\n                  data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'featurelayer\', layer) }}"\n                  data-intent-ctrl="sparc-sidebar-left">\n                  <i class="fa fa-info-circle"></i>\n                </a>\n              </div>\n            </div><!--\n            --><div class="geodash-sidebar-item-right">\n              <div\n                class="geodash-sidebar-item-label geodash-intent"\n                style="width: 100%; opacity: 0.6;"\n                data-intent-name="showLayer"\n                data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n                data-intent-ctrl="sparc-sidebar-left">\n                <span ng-bind-html="layer.legend.label | md2html"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr>\n        <h4>Other Layers</h4>\n        <div class="geodash-sidebar-otherlayers">\n          <div\n            ng-repeat="layer in otherlayers track by $index"\n            ng-init="layerIndex = $index"\n            ng-if="layer.legend!==undefined"\n            class="geodash-sidebar-item noselect"\n            data-layer="{{ layer.id }}">\n            <div class="geodash-sidebar-item-left">\n              <div class="geodash-sidebar-item-icon geodash-sidebar-item-more">\n                <a\n                  class="geodash-intent"\n                  data-intent-name="toggleModal"\n                  data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'featurelayer\', layer) }}"\n                  data-intent-ctrl="sparc-sidebar-left">\n                  <i class="fa fa-info-circle"></i>\n                </a>\n              </div>\n            </div><!--\n            --><div class="geodash-sidebar-item-right">\n              <div\n                class="geodash-sidebar-item-label geodash-intent"\n                style="width: 100%; opacity: 0.6;"\n                data-intent-name="showLayer"\n                data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n                data-intent-ctrl="sparc-sidebar-left">\n                <span ng-bind-html="layer.legend.label | md2html"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr>\n        <h4>Base Layers</h4>\n        <div class="geodash-sidebar-baselayers geodash-radio-group">\n          <div\n            ng-repeat="layer in baselayers track by $index"\n            ng-init="layerIndex = $index"\n            ng-if="layer.legend!==undefined"\n            class="geodash-sidebar-item noselect"\n            data-layer="{{ layer.id }}">\n            <div class="geodash-sidebar-item-left">\n              <div class="geodash-sidebar-item-icon geodash-sidebar-item-more">\n                <a\n                  class="geodash-intent"\n                  data-intent-name="toggleModal"\n                  data-intent-data="{{ html5data(\'toggleModal\', \'geodash-modal-layer-more\', \'baselayer\', layer) }}"\n                  data-intent-ctrl="sparc-sidebar-left">\n                  <i class="fa fa-info-circle"></i>\n                </a>\n              </div><!--\n              --><div class="geodash-sidebar-item-icon geodash-sidebar-item-visibility">\n                   <a\n                     ng-class=" layer.id == state.view.baselayer ? \'geodash-sidebar-item-visibility-button geodash-intent geodash-radio geodash-on\' : \'geodash-sidebar-item-visibility-button geodash-intent geodash-radio\'"\n                     data-intent-name="switchBaseLayer"\n                     data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n                     data-intent-class-on="geodash-on"\n                     data-intent-class-off=""\n                     data-intent-ctrl="sparc-sidebar-left">\n                     <i class="fa fa-eye geodash-on"></i><i class="fa fa-eye-slash geodash-off"></i>\n                   </a>\n              </div><!--\n              --><div class="geodash-sidebar-item-symbol" style="width: 10px;"></div>\n            </div><!--\n            --><div class="geodash-sidebar-item-right">\n              <div\n                class="geodash-sidebar-item-label"\n                style="{{ layer.id == state.view.baselayer ? \'width: 100%;\' : \'width: 100%;opacity: 0.4;\' }}">\n                <span ng-bind-html="layer.legend.label | md2html"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n',geodash.templates["modal_welcome_sparc.tpl.html"]='<div class="modal-dialog" data-backdrop="static" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-intro"\n              aria-controls="modal-welcome-intro"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Introduction</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-intro"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              class="welcome-body"\n              ng-bind-html="welcome.intro | md2html | default:\'No body given.\'"></span>\n            <hr>\n            <h3 class="welcome-body">Get Started: Select a county &amp; hazard!</h3>\n            <div class="input-group select2-bootstrap-prepend select2-bootstrap-append">\n              <input\n                id="country-input-backend"\n                name="country-input-backend"\n                type="text"\n                class="form-control"\n                style="display:none;"\n                ng-model="country">\n              <span class="input-group-addon" id="country-addon">Country</span>\n              <input\n                id="country-input"\n                name="country-input"\n                type="text"\n                class="typeahead form-control"\n                style="width:400px; height: auto;"\n                placeholder="Country (e.g., Haiti or Philippines)"\n                aria-describedby="country-addon"\n                data-placeholder="Country (e.g., Haiti, Nepal, or Philippines)"\n                data-initial-data="countries_select2"\n                data-backend="country-input-backend"\n                data-template-empty="<div class=&quot;alert alert-danger empty-message&quot;>Unable to find country</div>">\n                <div class="input-group-addon btn btn-danger btn-clear" data-clear="#country-input">\n                  <i class="fa fa-times"></i>\n                </div>\n            </div>\n            <br>\n            <div class="input-group select2-bootstrap-prepend select2-bootstrap-append">\n              <input\n                id="hazard-input-backend"\n                name="hazard-input-backend"\n                type="text"\n                class="form-control"\n                style="display:none;"\n                ng-model="hazard">\n              <span class="input-group-addon" id="hazard-addon">Hazard</span>\n              <input\n                id="hazard-input"\n                name="hazard-input"\n                type="text"\n                class="typeahead form-control"\n                style="width:400px; height: auto;"\n                placeholder="Hazard (e.g., Flood, Cyclone, Drought, or Landslide)"\n                aria-describedby="hazard-addon"\n                data-placeholder="Hazard (e.g., Flood, Cyclone, Drought, or Landslide)"\n                data-initial-data="hazards_select2"\n                data-backend="hazard-input-backend"\n                data-template-empty="<div class=&quot;empty-message&quot;>Unable to find hazard</div>">\n                <div class="input-group-addon btn btn-danger btn-clear" data-clear="#hazard-input">\n                  <i class="fa fa-times"></i>\n                </div>\n            </div>\n            <hr>\n            <ul class="nav nav-justified welcome-go">\n              <li>\n                <a\n                  ng-disabled="country == undefined || hazard == undefined || country == \'\' || hazard == \'\'"\n                  ng-class="country == undefined || hazard == undefined || country == \'\' || hazard == \'\' ? \'btn btn-default\' : \'btn btn-primary\' "\n                  ng-href="{{ country == undefined || hazard == undefined || country == \'\' || hazard == \'\' ? \'#\' : \'/country/\'+country+\'/hazard/\'+hazard +\'/month/1\' }}">Go!</a>\n              </li>\n            </ul>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n';
var MONTHS_NUM=[1,2,3,4,5,6,7,8,9,10,11,12],MONTHS_LONG=["January","February","March","April","May","June","July","August","September","October","November","December"],MONTHS_SHORT3=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],MONTHS_ALL=$.map(MONTHS_NUM,function(e,a){return{num:e,short3:MONTHS_SHORT3[a],"long":MONTHS_LONG[a]}}),DAYSOFTHEWEEK=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];SPARC_BREADCRUMBS=[{id:"sparc-select-country",placeholder:"Country...",type:"country",width:"resolve",height:"50px",output:"iso3",data:"countries_select2",breadcrumbs:[{name:"country",value:"iso3"},{name:"hazard",value:"hazard"},{name:"month",value:"month_num"}]},{id:"sparc-select-hazard",placeholder:"Hazard...",type:"hazard",width:"resolve",height:"50px",output:"hazard",data:"hazards_select2",breadcrumbs:[{name:"country",value:"iso3"},{name:"hazard",value:"hazard"},{name:"month",value:"month_num"}]}],geodash.filters["default"]=function(){return function(e,a){return e||a}},geodash.filters.md2html=function(){return function(e){if(void 0!=e){var a=new showdown.Converter;html=a.makeHtml(e),html=html.substring("<p>".length,html.length-"</p>".length);var t=new RegExp("(<a .*)>(.*?)</a>","gi");return html=html.replace(t,'$1 target="_blank">$2</a>'),html=html.replace(new RegExp("\n","gi"),"<br>"),html}return""}},geodash.filters.percent=function(){return function(e,a){return 100*e/a}},geodash.filters.tabLabel=function(){return function(e){return 2==e.split(" ").length?e.replace(" ","<br>"):e}},geodash.filters.as_float=function(){return function(e){return 1*e}},geodash.filters.add=function(){return function(e,a){if(Array.isArray(a)){var t=a;return e+t[e%t.length]}if(arguments.length>2){var t=Array.prototype.slice.call(arguments,[1]);return e+t[e%t.length]}return e+a}},geodash.filters.title=function(){return function(e){return"string"===$.type(e)?e.toTitleCase():e}},geodash.filters.as_array=function(){return function(e){return $.isArray(e)?e:$.map(e,function(e,a){return{key:a,item:e}})}},geodash.filters.sortItemsByArray=function(){return function(e,a){return $.isArray(e)?(e=$.grep(e,function(e,t){return-1!=$.inArray(e.key,a)}),e.sort(function(e,t){return $.inArray(e.key,a)-$.inArray(e.key,a)}),e):e}},geodash.filters.breakpoint=function(){return function(e,a){var t=geodash.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=t&&t.length>0?t[a]:-1}},geodash.filters.breakpoints=function(){return function(e){var a=geodash.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=a&&a.length>0?a:[]}},geodash.filters.position_x=function(){return function(e,a,t,n){var r=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},o=r(t)-2*n;return n+o*a/e}},geodash.filters.width_x=function(){return function(e,a,t){var n=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},r=n(a)-2*t;return r/e}},geodash.filters.len=geodash.filters.length=function(){return function(e){return Array.isArray(e)?e.length:angular.isString(e)?e.length:0}},geodash.filters.layer_is_visible=function(){return function(e,a){a=a||$("#geodash-main").scope().state;var t=a.view.featurelayers;return e==a.view.baselayer||-1!=$.inArray(e,t)}},geodash.filters.append=function(){return function(e,a){if(Array.isArray(e))return Array.isArray(a)?e.concat(a):e.push(a);if(angular.isString(e)){var t=Array.prototype.slice.call(arguments,[1]);return e+t.join("")}return e+a}},geodash.filters.default_if_undefined=function(){return function(e,a){return void 0!=e&&null!=e?e:a}},geodash.filters.default_if_undefined_or_blank=function(){return function(e,a){return void 0!=e&&null!=e&&""!=e?e:a}},geodash.filters.extract=function(){return function(e){var a=Array.prototype.slice.call(arguments,[1]);return a.length>0?extract(expand(a),e):null}},geodash.filters.inArray=function(){return function(e,a){return Array.isArray(a)?-1!=a.indexOf(e):!1}},geodash.filters.prepend=function(){return function(e,a){if(Array.isArray(e))return Array.isArray(a)?a.concat(e):[a].concat(e);if(angular.isString(e)){var t=Array.prototype.slice.call(arguments,[1]);return t.join("")+e}return a+e}},geodash.filters.ternary=function(){return function(e,a,t){return e?a:t}},geodash.filters.ternary_defined=function(){return function(e,a,t){return void 0!=e&&null!=e&&""!=e?a:t}},geodash.filters.yaml=function(){return function(e,a){return void 0!=e?YAML.stringify(e,a||4):""}},geodash.filters.join=function(){return function(e,a){return Array.isArray(e)?e.join(a):e}},geodash.filters.first=function(){return function(e){return Array.isArray(e)?e[0]:e}},geodash.filters.last=function(){return function(e){if(!Array.isArray(e))return e;if(0!=e.length)return e[e.length-1]}},geodash.filters.choose=function(){return function(e,a){if(Array.isArray(a)){var t=a;return e+t[e%t.length]}var t=Array.prototype.slice.call(arguments,[1]);return t[e%t.length]}},geodash.filters.formatBreakpoint=function(){return function(e){return Number.isInteger(e)?geodash.filters.formatInteger()(e,"delimited"," "):$.isNumeric(e)?geodash.filters.formatFloat()(e,2):""+e}},geodash.filters.formatFloat=function(){return function(e,a){return void 0!=e&&""!==e?void 0!=a?e.toFixed(a):e.toString():""}},geodash.filters.formatInteger=function(){return function(e,a,t){if(void 0!=e&&""!==e){if("delimited"==a){t=t||",";for(var n=Math.round(e).toString(),r=new RegExp("(\\d+)(\\d{3})","gi");r.test(n);)n=n.replace(r,"$1"+t+"$2");return n}return Math.round(e).toString()}return""}},geodash.filters.formatArray=function(){return function(e){return Array.isArray(e)?0==e.length?"":1==e.length?e[0]:2==e.length?e.join(" and "):e.slice(0,-1).join(", ")+", and "+e[e.length-1]:e}},geodash.filters.eq=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?e==a:!1}},geodash.filters.lte=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?a>=e:!1}},geodash.filters.gte=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?e>=a:!1}},geodash.filters.gt=function(){return function(e,a){return angular.isNumber(e)&&angular.isNumber(a)?e>a:!1}},geodash.filters.replace=function(){return function(e,a,t){return angular.isString(e)?angular.isString(a)&&angular.isString(t)?"."==a?e.replace(new RegExp("[.]","g"),t):e.replace(a,t):e:""}},geodash.filters.split=function(){return function(e,a){return angular.isString(e)?e.split(a||","):e}},geodash.filters.url_shapefile=function(){return function(e,a){var t="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var r={format_options:"charset:UTF-8",typename:n,outputFormat:"SHAPE-ZIP",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=a&&(r.cql_filter="BBOX("+e.wfs.geometry+", "+a.view.extent+")");var o=$.map(r,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");t=e.wfs.url+"?"+o}return t}},geodash.filters.url_geojson=function(){return function(e,a){var t="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var r={format_options:"charset:UTF-8",typename:n,outputFormat:"json",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=a&&(r.cql_filter="BBOX("+e.wfs.geometry+", "+a.view.extent+")");var o=$.map(r,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");t=e.wfs.url+"?"+o}return t}},geodash.filters.url_kml=function(){return function(e,a){var t="";if("kml"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var r={mode:"download",layers:n};void 0!=a&&(r.cql_filter="BBOX("+e.wfs.geometry+", "+a.view.extent+")");var o=$.map(r,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");t=e.kml.url+"?"+o}return t}},geodash.filters.url_describefeaturetype=function(){return function(e){var a="";if("wfs"in e){var t=e.wfs.version||"1.0.0",n={service:"WFS",request:"DescribeFeatureType",version:t,outputFormat:"application/json"},r="";"layers"in e.wms?r=e.wms.layers.unique().join(","):"layers"in e.wfs&&(r=e.wfs.layers.unique().join(",")),"1.1.0"==t||"1.0.0"==t?n.typeName=r:n.typeNames=r;var o=$.map(n,function(e,a){return encodeURIComponent(a)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geodash.directives.ngX=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngX,function(e){a.attr("x",e)})}}},geodash.directives.ngY=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngY,function(e){a.attr("y",e)})}}},geodash.directives.ngWidth=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngWidth,function(e){a.attr("width",e)})}}},geodash.directives.ngR=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngR,function(e){a.attr("r",e)})}}},geodash.directives.ngFill=function(){return{scope:!0,link:function(e,a,t){e.$watch(t.ngFill,function(e){a.attr("fill",e)})}}},geodash.directives.onLinkDone=function(){return{restriction:"A",link:function(e,a,t){e.$emit(t.onLinkDone||"link_done",{element:a,attributes:t})}}},geodash.directives.onRepeatDone=function(){return{restriction:"A",link:function(e,a,t){e.$emit(t.onRepeatDone||"repeat_done",{element:a,attributes:t})}}},geodash.directives.geodashModalDashboardConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_dashboard_config.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashTab=function(){return{restrict:"EA",replace:!0,scope:{target:"@target",label:"@label",active:"@active",height:"@height"},templateUrl:"geodash_tab.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashBtnClose=function(){return{restrict:"EA",replace:!0,scope:{dismiss:"@target"},templateUrl:"geodash_btn_close.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashBtnInfo=function(){return{restrict:"EA",replace:!0,scope:{placement:"@placement",info:"@info"},templateUrl:"geodash_btn_info.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashBtnClear=function(){return{restrict:"EA",replace:!0,scope:{target:"@target"},templateUrl:"geodash_btn_clear.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_layer_carto.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_layer_more.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalLayerConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_layer_config.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_circle.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolEllipse=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_ellipse.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:{style:"=style",containerWidth:"@"},templateUrl:"symbol_graduated.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_graduated.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashLegendBaselayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_baselayers.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashLegendFeaturelayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_featurelayers.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_welcome.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalAbout=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_about.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalDownload=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"geodash_modal_download.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashMapOverlays=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"map_overlays.tpl.html",link:function(e,a,t){e.style=function(e,a){var t={};return $.extend(t,{top:extract("position.top",a,"auto"),bottom:extract("position.bottom",a,"auto"),left:extract("position.left",a,"auto"),right:extract("position.right",a,"auto"),padding:extract("padding",a,"0"),background:extract("background",a,"transparent"),opacity:extract("opacity",a,"1.0"),width:extract("width",a,"initial"),height:extract("height",a,"initial")}),"text"==e&&$.extend(t,{"font-family":extract("text.font.family",a,"Arial"),"font-size":extract("text.font.size",a,"12px"),"font-style":extract("text.font.style",a,"normal"),"text-shadow":extract("text.shadow",a,"none")}),$.map(t,function(e,a){return a+": "+e}).join(";")+";"},$(a).on("mouseenter",".geodash-map-overlay",function(e,a){$(this).draggable("enable"),$(".geodash-map-grid").addClass("on")}),$(a).on("mouseleave",".geodash-map-overlay",function(e,a){$(this).draggable("disable"),$(".geodash-map-grid").removeClass("on")}),e.$on("overlayLoaded",function(e,a){console.log("overlayLoaded",e,a);var t=(a.attributes.overlayType,$(a.element)),n=t.parents(".geodash-map:first");t.draggable({containment:n,start:function(e,a){$(this).css("cursor","-webkit-grabbing")},drag:function(e,a){},stop:function(e,a){$(this).css("cursor","pointer"),console.log(e,a);var t=a.position,r=$(this).data("overlay-index"),o=geodash.api.getScope("geodash-sidebar-right");if(void 0!=o){var i=n.width(),l=n.height();o.map_config_flat["overlays__"+r+"__position__top"]=t.top<l/2?t.top+"px":"auto",o.map_config_flat["overlays__"+r+"__position__bottom"]=t.top>=l/2?l-t.top+"px":"auto",o.map_config_flat["overlays__"+r+"__position__left"]=t.left<i/2?t.left+"px":"auto",o.map_config_flat["overlays__"+r+"__position__right"]=t.left>=i/2?i-t.left+"px":"auto",setTimeout(function(){o.validateFields(["overlays__"+r+"__position__top","overlays__"+r+"__position__bottom","overlays__"+r+"__position__left","overlays__"+r+"__position__right"])},0)}}})})}}},geodash.directives.geodashBreadcrumbs=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"breadcrumbs.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashCalendar=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"calendar.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashModalFilterMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_filter_more.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashFilterCheckbox=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_checkbox.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashFilterRadio=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_radio.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashFilterSlider=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_slider.tpl.html",link:function(e,a,t){}}},geodash.directives.geodashFilterContainer=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_container.tpl.html",link:function(e,a,t){}}},geodash.directives.sparcSidebar=function(){return{controller:geodash.controllers.controller_sparc_sidebar,restrict:"EA",replace:!0,scope:!0,templateUrl:"sparc_sidebar.tpl.html",link:function(e,a,t){setTimeout(function(){$(a);if(void 0!=e.charts)for(var t=0;t<e.charts.length;t++){var n={};"drought"==e.charts[t].hazard&&(n.bullet_width=function(e,a){return"p6"==e.id?6:"p8"==e.id?8:16}),buildHazardChart(e.charts[t],geodash.initial_data.layers.popatrisk,n)}},10)}}},geodash.directives.sparcSidebarFeatureLayer=function(){return{controller:geodash.controllers.controller_sparc_sidebar,restrict:"EA",replace:!0,scope:!0,templateUrl:"sparc_sidebar_feature_layer.tpl.html",link:function(e,a,t){setTimeout(function(){$(a);if(void 0!=e.charts)for(var t=0;t<e.charts.length;t++){var n={};"drought"==e.charts[t].hazard&&(n.bullet_width=function(e,a){return"p6"==e.id?6:"p8"==e.id?8:16}),buildHazardChart(e.charts[t],geodash.initial_data.layers.popatrisk,n)}},10)}}},geodash.directives.sparcModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome_sparc.tpl.html",link:function(e,a,t){}}},geodash.controllers.controller_base=function(e,a,t,n,r,o){},geodash.controllers.controller_legend=function(e,a,t,n,r,o){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.map_config=r,e.state=n,e.html5data=function(){var e=arguments,a=e[0].toLowerCase();if("togglemodal"==a){var t=(e[1],e[2]),n=e[3];return{id:e[1],"static":{layerID:n.id},dynamic:{layer:[t,n.id]}}}return""},e.updateVariables=function(){var a=e.map_config.legendlayers;if("baselayers"in e.map_config&&void 0!=e.map_config.baselayers){var t=$.grep(e.map_config.baselayers,function(e,t){return-1!=$.inArray(e.id,a)});t.sort(function(e,t){return $.inArray(e.id,a)-$.inArray(t.id,a)}),e.baselayers=t}else e.baselayers=[];if("featurelayers"in e.map_config&&void 0!=e.map_config.featurelayers){var n=$.grep(e.map_config.featurelayers,function(e,t){return-1!=$.inArray(e.id,a)});n.sort(function(e,t){return $.inArray(e.id,a)-$.inArray(t.id,a)}),e.featurelayers=n}else e.featurelayers=[]},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables),e.$watch("state",e.updateVariables);$(a);e.$on("refreshMap",function(a,t){console.log("args: ",t),e.state=t.state})},geodash.controllers.controller_breadcrumb=function(e,a,t,n){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.state=n,e.breadcrumbs=SPARC_BREADCRUMBS,setTimeout(function(){$("select",a).each(function(){var a=$(this),t=a.data("breadcrumbs"),r=a.data("placeholder"),o=a.data("initialData"),i=a.data("width"),l=a.data("height"),s="sparc-select-dropdown";a.select2({data:geodash.initial_data.data[o],placeholder:r,allowClear:!1,width:i,height:l,dropdownCssClass:s}),a.on("select2:select",function(r){var o=r.params.data.id;e.$apply(function(){var t=a.data("output");e.state[t]=o});for(var i="",l=0;l<t.length;l++){var s=t[l];void 0!=n[s.value]&&(i+="/"+s.name+"/"+e.state[s.value])}console.log("Going to url ",i),window.location.href=i})})},10)},geodash.controllers.controller_calendar=function(e,a,t,n,r,o){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.state=n,e.months=MONTHS_ALL,e.$on("refreshMap",function(a,t){"state"in t&&(e.state=t.state)})},geodash.controllers.controller_filter=function(e,a,t,n,r,o,i){var l=geodash.initial_data.layers.popatrisk.data.summary.all.max.at_admin2_month;angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.filters=geodash.api.getFeatureLayer("popatrisk").filters,setTimeout(function(){$(a).on("change","input:checkbox",function(a){console.log(a);var t=this,n=$(t).data("output"),r={},o=$(t).parents(".btn-group:first"),n=o.data("output");void 0==r[n]&&(r[n]=[]),o.find("input").each(function(){$(this).is(":checked")?(r[n].push($(this).data("value")),$(this).parent("label").removeClass("btn-default").addClass("btn-warning")):$(this).parent("label").addClass("btn-default").removeClass("btn-warning")}),geodash.api.intend("filterChanged",{layer:"popatrisk",filter:r},e)}),$(a).on("change",'input:radio[name="cat"]',function(a){console.log(a);var t=$(this).data("output"),n={};n[t]=this.value,geodash.api.intend("filterChanged",{layer:"popatrisk",filter:n},e)}),$(".geodash-filter-slider",$(a)).each(function(){var a=$(this).find(".geodash-filter-slider-slider"),t=$(this).find(".geodash-filter-slider-label"),o=a.data("type"),i=a.data("output");if("ordinal"==o){var s=a.data("range"),d=r.filters.popatrisk[i],c=a.data("options");a.data("label",t),geodash.ui_init_slider_label(n,a,o,s,d),geodash.ui_init_slider_slider(n,e,a,o,s,c.indexOf(d),0,c.length-1,1)}else{var s=a.data("range"),p=geodash.assert_float(a.data("min-value"),0),g=a.data("step");if("boolean"==$.type(s)&&s||"true"==s.toLowerCase()){var u=void 0!=l&&"summary"==a.data("max-value")?l:geodash.assert_float(a.data("max-value"),void 0),h=r.filters.popatrisk[i];h=geodash.assert_array_length(h,2,[p,u]);var f=[Math.floor(h[0]),Math.floor(h[1])],m=Math.floor(p),y=Math.floor(u),v=Math.floor(g);a.data("label",t),geodash.ui_init_slider_label(n,a,o,s,h),geodash.ui_init_slider_slider(n,e,a,o,s,f,m,y,v),console.log(b,m,y,v,s)}else{var u=geodash.assert_float(a.data("max-value"),void 0),d=r.filters.popatrisk[i],b=Math.floor(100*d),m=Math.floor(100*p),y=Math.floor(100*u),v=Math.floor(100*g);a.data("label",t),geodash.ui_init_slider_label(n,a,o,s,d),geodash.ui_init_slider_slider(n,e,a,o,s,f,m,y,v),console.log(b,m,y,v,s)}}})},10)};var highlightFeature=function(e){e.target},init_map=function(e){var a=L.map("map",{zoomControl:geodash.api.opt_b(e,"zoomControl",!1),minZoom:geodash.api.opt_i(e,"minZoom",3),maxZoom:geodash.api.opt_i(e,"maxZoom",18)});return a.setView([geodash.api.opt_i(e,["latitude","lat"],0),geodash.api.opt_i(e,["longitude","lon","lng","long"],0)],geodash.api.opt_i(e,["zoom","z"],0)),$.each(geodash.api.opt_j(e,"listeners"),function(e,t){a.on(e,t)}),a};geodash.controllers.controller_map_map=function(e,a,t,n,r,o,i,l,s){var d={click:function(e){var t=e.latlng,n={lat:t.lat,lon:t.lng};geodash.api.intend("clickedOnMap",n,a)},zoomend:function(e){var t={extent:s.map.getBounds().toBBoxString(),z:s.map.getZoom()};geodash.api.intend("viewChanged",t,a)},dragend:function(e){var t=s.map.getCenter(),n={extent:s.map.getBounds().toBBoxString(),lat:t.lat,lon:t.lng};geodash.api.intend("viewChanged",n,a)},moveend:function(e){var t=s.map.getCenter(),n={extent:s.map.getBounds().toBBoxString(),lat:t.lat,lon:t.lng};geodash.api.intend("viewChanged",n,a)}},c=hasHashValue(["latitude","lat","longitude","lon","lng","zoom","z"]),p=i.view;s.map=init_map({zoomControl:l.controls.zoom,minZoom:l.view.minZoom,maxZoom:l.view.maxZoom,lat:p.lat,lon:p.lon,z:p.z,listeners:d});var g=geodash.layers.init_baselayers(s.map,l.baselayers);$.extend(s.baselayers,g);var u=l.baselayers[0].id;if(s.baselayers[u].addTo(s.map),geodash.api.intend("viewChanged",{baselayer:u},a),geodash.api.intend("layerLoaded",{type:"baselayer",layer:u},a),$.each(l.featurelayers,function(e,t){-1==$.inArray(t.id,["popatrisk","context","vam"])&&geodash.layers.init_featurelayer(t.id,t,a,s,l)}),geodash.api.hasFeatureLayer("context")&&"features"in geodash.initial_data.layers.context.data.geojson){var h=function(e){console.log(e);var a=geodash.api.getFeatureLayer("context"),t=e.feature,n=geodash.popup.buildPopupTemplate(a.popup,a,t),o={layer:a,feature:{attributes:t.properties,geometry:{}}};return r(n)(o)};s.featurelayers.context=L.geoJson(geodash.initial_data.layers.context.data.geojson,{renderOrder:$.inArray("context",l.renderlayers),style:geodash.initial_data.layers.context.style["default"],hoverStyle:geodash.initial_data.layers.context.style.hover,onEachFeature:function(e,a){var t={maxWidth:300};a.bindPopup(h,t);var n=geodash.api.getFeatureLayer("context");if("label"in n.cartography[0]){var o=r(n.cartography[0].label.value)({layer:n,feature:{attributes:e.properties,geometry:{}}});a.bindLabel(o)}a.on({mouseover:highlightFeature,mouseout:function(e){s.featurelayers.context.resetStyle(e.target)}})}})}if(geodash.api.hasFeatureLayer("popatrisk")&&"features"in geodash.initial_data.layers.popatrisk.data.geojson){var f=function(e){console.log(e);var a=angular.element("#geodash-main").scope(),t=a.state,n=geodash.api.getFeatureLayer("popatrisk"),o=n.popup,i=geodash.api.normalize_feature(e.feature);i.attributes.popatrisk=sparc.calculate_population_at_risk(t.hazard,i,t,["vam_filter_fcs","vam_filter_csi"]);var l=geodash.popup.buildPopupContent(r,n,i,t);return setTimeout(function(){for(var e=0;e<o.panes.length;e++){var a=o.panes[e];if("charts"in a)for(var t=0;t<a.charts.length;t++){var n=a.charts[t],r=buildGroupsAndColumnsForAdmin2(n,geodash.initial_data.layers.popatrisk,i.attributes.admin2_code),l={groups:r.groups,columns:r.columns,bullet_width:function(e,a){return"rp25"==e.id?6:12}};buildHazardChart(n,geodash.initial_data.layers.popatrisk,l)}}},1e3),l};s.featurelayers.popatrisk=L.geoJson(geodash.initial_data.layers.popatrisk.data.geojson,{renderOrder:$.inArray("popatrisk",l.renderlayers),style:geodash.initial_data.layers.popatrisk.style["default"],hoverStyle:geodash.initial_data.layers.popatrisk.style.hover,onEachFeature:function(e,a){var t={maxWidth:300};a.bindPopup(f,t);var n=geodash.api.getFeatureLayer("popatrisk"),o=extract(["cartography",0,"label"],n);if(angular.isDefined(o)){var i=r(o.value)({layer:n,feature:{attributes:e.properties,geometry:{}}});a.bindLabel(i)}a.on({mouseover:highlightFeature,mouseout:function(e){s.featurelayers.popatrisk.resetStyle(e.target)},click:function(e){}})}}),geodash.layers.init_featurelayer_post(a,s,"popatrisk",s.featurelayers.popatrisk,-1!=$.inArray("popatrisk",l.renderlayers)),c||s.map.fitBounds(s.featurelayers.popatrisk.getBounds())}$("#geodash-map-sidebar-toggle-left").click(function(){$(this).toggleClass("sidebar-open sidebar-left-open"),$("#sparc-sidebar-left, #geodash-map").toggleClass("sidebar-open sidebar-left-open"),setTimeout(function(){s.map.invalidateSize({animate:!0,pan:!1})},2e3)}),a.$on("refreshMap",function(e,a){console.log("Refreshing map...");var t=a.state.view.baselayer;$.each(s.baselayers,function(e,a){var n=e==t;s.map.hasLayer(a)&&!n?s.map.removeLayer(a):!s.map.hasLayer(a)&&n&&s.map.addLayer(a)});var n=a.state.view.featurelayers;$.each(s.featurelayers,function(e,a){var t=-1!=$.inArray(e,n);s.map.hasLayer(a)&&!t?s.map.removeLayer(a):!s.map.hasLayer(a)&&t&&s.map.addLayer(a)});var r=$.grep(layersAsArray(s.featurelayers),function(e){return-1!=$.inArray(e.id,n)}),o=sortLayers($.map(r,function(e,a){return e.layer}),!0),i=($.map(s.baselayers,function(e,a){return{id:a,layer:e}}),$.map($.grep(layersAsArray(s.baselayers),function(e){return e.id==t}),function(e,a){return e.layer}));updateRenderOrder(i.concat(o)),"popatrisk"in s.featurelayers&&void 0!=s.featurelayers.popatrisk&&s.featurelayers.popatrisk.setStyle(geodash.initial_data.layers.popatrisk.style["default"]),"context"in s.featurelayers&&void 0!=s.featurelayers.context&&s.featurelayers.context.setStyle(geodash.initial_data.layers.context.style["default"]),setTimeout(function(){s.map._onResize()},0)}),a.$on("changeView",function(e,a){console.log("Refreshing map..."),void 0!=a.layer&&s.map.fitBounds(s.featurelayers[a.layer].getBounds())}),a.$on("openPopup",function(e,a){console.log("Refreshing map..."),void 0!=a.featureLayer&&void 0!=a.feature&&void 0!=a.location&&geodash.popup.openPopup(r,a.featureLayer,a.feature,a.location,s.map,angular.element("#geodash-main").scope().state)})},geodash.controllers.controller_sparc_sidebar=function(e,a,t,n,r,o){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),e.charts=r.charts,e.updateVariables=function(){var a={sidebar:e.map_config.legendlayers,sparc:["popatrisk","context"],wfp:["wld_poi_facilities_wfp","wld_trs_supplyroutes_wfp"],other:["landscan","flood_events","landslide_events","flood_probability","cyclone_probability","imerg_1day","imerg_3day","imerg_7day"]};if("baselayers"in e.map_config&&void 0!=e.map_config.baselayers){var t=$.grep(e.map_config.baselayers,function(e,t){return-1!=$.inArray(e.id,a.sidebar)});t.sort(function(e,t){return $.inArray(e.id,a.sidebar)-$.inArray(t.id,a.sidebar)}),e.baselayers=t}else e.baselayers=[];if("featurelayers"in e.map_config&&void 0!=e.map_config.featurelayers){var n=$.grep(e.map_config.featurelayers,function(e,t){return-1!=$.inArray(e.id,a.sidebar)});n.sort(function(e,t){return $.inArray(e.id,a.sidebar)-$.inArray(t.id,a.sidebar)}),e.featurelayers=n;var r=$.grep(e.map_config.featurelayers,function(t,n){return-1!=$.inArray(t.id,a.sidebar)&&-1!=$.inArray(t.id,e.state.view.featurelayers)});r.sort(function(a,t){return $.inArray(a.id,e.state.view.featurelayers)-$.inArray(t.id,e.state.view.featurelayers)}),e.visiblefeaturelayers=r;var o=$.grep(e.map_config.featurelayers,function(e,t){return-1!=$.inArray(e.id,a.sparc)});o.sort(function(e,t){return $.inArray(e.id,a.sparc)-$.inArray(t.id,a.sparc)}),e.sparclayers=o;var i=$.grep(e.map_config.featurelayers,function(e,t){return-1!=$.inArray(e.id,a.wfp)});i.sort(function(e,t){return $.inArray(e.id,a.wfp)-$.inArray(t.id,a.wfp)}),e.wfplayers=i;var l=$.grep(e.map_config.featurelayers,function(e,t){return-1!=$.inArray(e.id,a.other)});l.sort(function(e,t){return $.inArray(e.id,a.other)-$.inArray(t.id,a.other)}),e.otherlayers=l}else e.featurelayers=[]},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables),e.$watch("state",e.updateVariables),e.$on("refreshMap",function(a,t){"state"in t&&(e.state=t.state,e.updateVariables(),e.$digest())})};var buildPageURL=function(e,a,t){var n=e(a.pages[t.page])(t),r=[],o=t.view;void 0!=o&&void 0!=o.z&&void 0!=o.lat&&void 0!=o.lon&&(r.push("z="+o.z),r.push("lat="+o.lat.toFixed(4)),r.push("lon="+o.lon.toFixed(4)));var i=t.filters;return i&&$.each(t.filters,function(e,a){$.each(a,function(a,t){r.push(e+":"+a+"="+t)})}),r.length>0&&(n+="#"+r.join("&")),n};geodash.controllers.controller_main=function(e,a,t,n,r,o,i,l,s,d){a.map_config=l,a.state=geodash.init_state(i,s),a.live=d,a.refreshMap=function(e){a.$broadcast("refreshMap",{state:e})},$.each(geodash.listeners,function(e,t){a.$on(e,t)}),a.$on("stateChanged",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.$apply(function(){n.state=$.extend(n.state,t);var a=buildPageURL(e,l,n.state);history.replaceState(i,"",a),n.refreshMap(n.state)})}),a.$on("filterChanged",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.$apply(function(){n.state.filters[t.layer]=$.extend(n.state.filters[t.layer],t.filter);var a=buildPageURL(e,l,n.state);history.replaceState(i,"",a),n.refreshMap(n.state)})}),a.$on("selectStyle",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.$apply(function(){n.state.styles[t.layer]=t.style;var a=buildPageURL(e,l,n.state);history.replaceState(i,"",a),n.refreshMap(n.state)})}),a.$on("viewChanged",function(a,t){console.log("event",a),console.log("args",t);var n=geodash.api.getScope("geodash-main");n.state.view=$.extend(n.state.view,t);var r=buildPageURL(e,l,n.state);history.replaceState(i,"",r)}),a.$on("layerLoaded",function(e,a){var t=geodash.api.getScope("geodash-main"),n=a.type,r=a.layer,o=void 0!=a.visible?a.visible:!0;"featurelayer"==n?o&&t.state.view.featurelayers.push(r):"baselayer"==n&&(t.state.view.baselayer=r)}),a.$on("showLayer",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main"),n=a.layer;-1==$.inArray(n,t.state.view.featurelayers)&&(t.state.view.featurelayers.push(n),t.refreshMap(t.state))}),a.$on("hideLayer",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main"),n=a.layer,r=$.inArray(n,t.state.view.featurelayers);-1!=r&&(t.state.view.featurelayers.splice(r,1),t.refreshMap(t.state))}),a.$on("showLayers",function(e,a){console.log("event",e),console.log("args",a);for(var t=geodash.api.getScope("geodash-main"),n=a.layers,r=0;r<n.length;r++){var o=n[r];-1==$.inArray(o,t.state.view.featurelayers)&&(t.state.view.featurelayers.push(o),t.refreshMap(t.state))}}),a.$on("hideLayers",function(e,a){console.log("event",e),console.log("args",a);for(var t=geodash.api.getScope("geodash-main"),n=a.layers,r=0;r<n.length;r++){var o=a.layers[r],i=$.inArray(o,t.state.view.featurelayers);-1!=i&&(t.state.view.featurelayers.splice(i,1),t.refreshMap(t.state))}}),a.$on("switchBaseLayer",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main");t.state.view.baselayer=a.layer,t.refreshMap(t.state);
}),a.$on("zoomToLayer",function(e,a){var t=geodash.api.getScope("geodash-main"),n=a.layer,r=$.inArray(n,t.state.view.featurelayers);-1!=r&&t.$broadcast("changeView",{layer:n})}),a.$on("clickedOnMap",function(e,a){console.log("event",e),console.log("args",a);var t=geodash.api.getScope("geodash-main"),n=t.state.view.z,i=t.state.view.featurelayers;console.log("visibleFeatureLayers",i);for(var l={},s={},d=[],c=0;c<i.length;c++){var p=geodash.api.getFeatureLayer(i[c],{scope:t});if("wfs"in p&&void 0!=p.wfs)for(var g={service:"wfs",version:p.wfs.version,request:"GetFeature",srsName:"EPSG:4326"},u=new L.LatLng(a.lat,a.lon),h=geodash.tilemath.point_to_bbox(a.lon,a.lat,n,4).join(","),f=p.wfs.layers||p.wms.layers||[],m=0;m<f.length;m++){typeName=f[m];var y=p.wfs.url+"?"+$.param($.extend(g,{typeNames:typeName,bbox:h}));d.push(y),s[typeName.toLowerCase()]=geodash.layers.aggregate_fields(p),l[typeName.toLowerCase()]=p}}o.all(geodash.http.build_promises(r,d)).then(function(e){var a=geodash.http.build_features(e,s);if(console.log("Features: ",a),a.length>0){var n=geodash.vecmath.getClosestFeatureAndLocation(a,u),r=l[n.feature.featuretype];t.$broadcast("openPopup",{featureLayer:r,feature:n.feature,location:{lon:n.location.lng,lat:n.location.lat}})}})})};var init_sparc_controller_main=function(e,a){geodash.init_controller(e,a,geodash.controllers.controller_main);var t=[".geodash-controller.geodash-about",".geodash-controller.geodash-download",".geodash-controller.geodash-dashboard-config","[geodash-controller='geodash-modal']","[geodash-controller='geodash-base']"].join(", ");geodash.init_controllers(e,a,[{selector:t,controller:geodash.controllers.controller_base}]),geodash.init_controllers(e,a,[{selector:"[geodash-controller='sparc-sidebar-left']",controller:geodash.controllers.controller_sidebar_sparc}]),$("[geodash-controller='geodash-map']",e).each(function(){geodash.init_controller($(this),a,geodash.controllers.controller_base),geodash.init_controllers($(this),a,[{selector:"[geodash-controller='geodash-map-map']",controller:geodash.controllers.controller_map_map},{selector:"[geodash-controller='sparc-map-calendar']",controller:geodash.controllers.controller_calendar},{selector:"[geodash-controller='sparc-map-breadcrumb']",controller:geodash.controllers.controller_breadcrumb},{selector:"[geodash-controller='geodash-map-filter']",controller:geodash.controllers.controller_filter},{selector:"[geodash-controller='geodash-map-legend']",controller:geodash.controllers.controller_legend},{selector:"[geodash-controller='sparc-welcome']",controller:geodash.controllers.controller_sparc_welcome}])})};geodash.controllers.controller_sparc_welcome=function(e,a,t,n,r,o,i){angular.extend(this,t("GeoDashControllerBase",{$element:a,$scope:e})),setTimeout(function(){$("#country-input, #hazard-input",a).each(function(){var e=$(this),a=(e.data("placeholder"),e.data("initialData")),t=(e.data("width"),e.data("height"),e.data("template-empty")),n=(e.data("template-suggestion"),new Bloodhound({identify:function(e){return e.text},datumTokenizer:function(e){return Bloodhound.tokenizers.whitespace(e.text)},queryTokenizer:Bloodhound.tokenizers.whitespace,local:geodash.initial_data.data[a]}));e.typeahead(null,{name:e.attr("name"),minLength:1,limit:10,hint:!1,highlight:!0,displayKey:"text",source:n,templates:{empty:t,suggestion:function(e){return"<p><strong>"+e.text+"</strong> - "+e.id+"</p>"},footer:function(e){return"<div>Searched for <strong>"+e.query+"</strong></div>"}}}).on("blur",function(e){var a=n.get($(this).val());$("#"+$(this).data("backend")).val(1==a.length?a[0].id:null).trigger("input").change()}).on("typeahead:change",function(e,a){console.log("Event: ",e,a);var t=n.get(a);$("#"+$(this).data("backend")).val(1==t.length?t[0].id:null).trigger("input").change()}).on("typeahead:select typeahead:autocomplete typeahead:cursorchange",function(e,a){console.log("Event: ",e,a);$("#"+$(this).data("backend")).val("id"in a?a.id:null).trigger("input").change()})}),sparc.welcome({scope:e})},10)};